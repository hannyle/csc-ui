{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils/utils.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,YAAY,CAC1B,KAAiB,EACjB,OAAoB,EACpB,MAAM,GAAG,KAAK;EAEd,IAAI,aAAa,GAAgB,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;EAErE,IAAI,CAAC,aAAa,EAAE;IAClB,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;GACpC;EAED,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;EAE1C,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;EAClC,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;EACpC,MAAM,IAAI,GAAI,KAAK,CAAC,MAAsB,CAAC,qBAAqB,EAAE,CAAC;EAEnE,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;EAC9D,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;EACpC,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;EAEnC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;EAC7B,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;EAE9B,MAAM,cAAc,GAAG;IACrB,GAAG,EAAE,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;IAC1D,IAAI,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;GAC1D,CAAC;EAEF,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;EACrC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;EACtC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5D,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;EAE/D,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;EAEvC,UAAU,CAAC,GAAG,EAAE;IACd,aAAa,CAAC,MAAM,EAAE,CAAC;EACzB,CAAC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC","sourcesContent":["export function createRipple(\n  event: MouseEvent,\n  element: HTMLElement,\n  center = false,\n) {\n  let rippleElement: HTMLElement = element.querySelector('.md-ripple');\n\n  if (!rippleElement) {\n    rippleElement = document.createElement('div');\n    rippleElement.classList.add('md-ripple');\n    element.appendChild(rippleElement);\n  }\n\n  rippleElement.classList.remove('animate');\n\n  const width = element.offsetWidth;\n  const height = element.offsetHeight;\n  const rect = (event.target as HTMLElement).getBoundingClientRect();\n\n  const d = Math.max(element.offsetWidth, element.offsetHeight);\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n\n  const top = y - d / 2 + 'px';\n  const left = x - d / 2 + 'px';\n\n  const centerPosition = {\n    top: d === height ? '0px' : ((d - height) / 2) * -1 + 'px',\n    left: d === width ? '0px' : ((d - width) / 2) * -1 + 'px',\n  };\n\n  rippleElement.style.width = d + 'px';\n  rippleElement.style.height = d + 'px';\n  rippleElement.style.top = center ? centerPosition.top : top;\n  rippleElement.style.left = center ? centerPosition.left : left;\n\n  rippleElement.classList.add('animate');\n\n  setTimeout(() => {\n    rippleElement.remove();\n  }, 500);\n}\n"]}