{"version":3,"file":"c-icon-button.js","sourceRoot":"","sources":["../../../src/components/c-icon-button/c-icon-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAWjD,MAAM,OAAO,WAAW;;IA4Dd,aAAQ,GAAG,CAAC,KAAK,EAAE,EAAE;MAC3B,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC,CAAC;;gBArDa,KAAK;oBAKD,KAAK;oBAKL,KAAK;gBAKD,IAAI;iBAKX,KAAK;oBAKF,KAAK;gBAKwB,SAAS;;EAIjD,YAAY;IAClB,OAAO,WAAK,KAAK,EAAC,mBAAmB,IAAE,IAAI,CAAC,KAAK,CAAO,CAAC;EAC3D,CAAC;EAEO,aAAa;IACnB,OAAO;MACL,aAAa,EAAE,IAAI;MACnB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MACzB,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;MACjB,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;MACnB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MACzB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MACzB,oBAAoB,EAAE,IAAI,CAAC,IAAI,KAAK,OAAO;MAC3C,sBAAsB,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS;KAChD,CAAC;EACJ,CAAC;EAMD,MAAM;IACJ,OAAO,CACL,cAAQ,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ;MACzD,WACE,KAAK,EAAC,iBAAiB,EACvB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAoB,CAAC;QAErD,gBACG,IAAI,CAAC,IAAI,IAAI,CACZ,WAAK,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW;UAC7C,YAAM,CAAC,EAAE,IAAI,CAAC,IAAI,GAAI,CAClB,CACP,CACI,CACH;MACL,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE,CAC3B,CACV,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop } from '@stencil/core';\nimport { createRipple } from '../../utils/utils';\n\n/**\n * @group Buttons\n * @slot - Default slot for the icon\n */\n@Component({\n  tag: 'c-icon-button',\n  styleUrl: 'c-icon-button.scss',\n  shadow: true,\n})\nexport class CIconButton {\n  /**\n   * Show a badge on top of the icon\n   */\n  @Prop() badge: string;\n\n  /**\n   * Text variant of the button\n   */\n  @Prop() text = false;\n\n  /**\n   * Inverted color for dark backgrounds\n   */\n  @Prop() inverted = false;\n\n  /**\n   * Outlined variant of the button\n   */\n  @Prop() outlined = false;\n\n  /**\n   * Path for the svg icon\n   */\n  @Prop() path: string = null;\n\n  /**\n   * Ghost variant of the button\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Disable the button\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Size of the button\n   */\n  @Prop() size: 'default' | 'x-small' | 'small' = 'default';\n\n  private _container?: HTMLDivElement;\n\n  private _renderBadge() {\n    return <div class=\"icon-button-badge\">{this.badge}</div>;\n  }\n\n  private _outerClasses() {\n    return {\n      'icon-button': true,\n      disabled: !!this.disabled,\n      text: !!this.text,\n      ghost: !!this.ghost,\n      outlined: !!this.outlined,\n      inverted: !!this.inverted,\n      'icon-button--small': this.size === 'small',\n      'icon-button--x-small': this.size === 'x-small',\n    };\n  }\n\n  private _onClick = (event) => {\n    createRipple(event, this._container);\n  };\n\n  render() {\n    return (\n      <button class={this._outerClasses()} onClick={this._onClick}>\n        <div\n          class=\"inner-container\"\n          ref={(el) => (this._container = el as HTMLDivElement)}\n        >\n          <slot>\n            {this.path && (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d={this.path} />\n              </svg>\n            )}\n          </slot>\n        </div>\n        {this.badge && this._renderBadge()}\n      </button>\n    );\n  }\n}\n"]}