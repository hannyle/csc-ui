{"version":3,"file":"c-checkbox.js","sourceRoot":"","sources":["../../../src/components/c-checkbox/c-checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Host,\n  h,\n  Listen,\n  Prop,\n  Event,\n  EventEmitter,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { mdiCloseCircle } from '@mdi/js';\nimport { createRipple } from '../../utils/utils';\n/**\n * @group Form\n * @slot - Default slot for the label\n */\n@Component({\n  tag: 'c-checkbox',\n  styleUrl: 'c-checkbox.scss',\n  shadow: true,\n})\nexport class CCheckbox {\n  /**\n   * Disable the checkbox\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Intermediate state\n   */\n  @Prop() intermediate = false;\n\n  /**\n   * Element label\n   */\n  @Prop() label = '';\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the valid√≠ty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Is the element checked\n   */\n  @Prop({ mutable: true }) value = false;\n\n  /**\n   * Triggered when element is checked or unchecked\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @State() messageOptions = {\n    show: true,\n    type: 'hint',\n    content: '',\n  };\n\n  private _container: HTMLDivElement;\n\n  private _validationIcon = (\n    <svg height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\n      <path d={mdiCloseCircle} />\n    </svg>\n  );\n\n  @Watch('validation')\n  onValidationMessageChange(message: string) {\n    this.onValidChange(message.length === 0);\n  }\n\n  @Watch('valid')\n  onValidChange(valid: boolean) {\n    this._handleValidation(valid || this.valid);\n  }\n\n  @Listen('keydown', { passive: true })\n  handleKeyDown(event: KeyboardEvent) {\n    if (['Space'].includes(event.code)) {\n      event.preventDefault();\n      this.toggleState(event);\n    }\n  }\n\n  componentWillLoad() {\n    if (typeof this.value !== 'boolean') {\n      console.warn(`[C-CHECKBOX] Property 'value' should be a boolean.`);\n    }\n  }\n\n  componentDidLoad() {\n    this._handleValidation(this.valid, 0);\n  }\n\n  private _handleValidation(valid: boolean, timeout = 200) {\n    this.messageOptions = {\n      ...this.messageOptions,\n      show: false,\n    };\n\n    setTimeout(() => {\n      this.messageOptions = {\n        ...this.messageOptions,\n        type: valid ? 'hint' : 'error',\n        show: true,\n        content: valid ? (\n          <span>{this.hint}</span>\n        ) : (\n          <span>\n            {this._validationIcon} {this.validation}\n          </span>\n        ),\n      };\n    }, timeout);\n  }\n\n  private toggleState(event) {\n    if (this.disabled) return;\n\n    createRipple(event, this._container, true);\n\n    this.value = !this.value;\n    this.changeValue.emit(this.value);\n  }\n\n  private _renderMessages() {\n    if (this.hideDetails) return;\n\n    const classes = {\n      'c-checkbox__details': true,\n      active: this.messageOptions.show,\n    };\n\n    const messageClasses = {\n      'c-checkbox__message': true,\n      [`c-checkbox__message--${this.messageOptions.type}`]: true,\n    };\n\n    return (\n      <div class={classes}>\n        <div class={messageClasses}>{this.messageOptions.content}</div>\n      </div>\n    );\n  }\n\n  render() {\n    const wrapperClasses = {\n      'c-checkbox': true,\n      'c-checkbox--disabled': this.disabled,\n      'c-checkbox--error': this.messageOptions.type === 'error',\n    };\n\n    const labelClasses = {\n      'c-checkbox__label': true,\n      'c-checkbox__label--intermediate': this.intermediate,\n    };\n\n    return (\n      <Host>\n        <div class={wrapperClasses}>\n          <input\n            class=\"visuallyhidden\"\n            id=\"checkbox\"\n            type=\"checkbox\"\n            aria-checked={(!!this.value).toString()}\n            aria-disabled={this.disabled.toString()}\n            checked={this.value}\n            disabled={this.disabled}\n            onChange={(event) => this.toggleState(event)}\n          />\n\n          <label class={labelClasses} htmlFor=\"checkbox\">\n            <div\n              class=\"ripple\"\n              ref={(el) => (this._container = el as HTMLDivElement)}\n            >\n              <svg viewBox=\"0 0 100 100\">\n                {!this.intermediate && !!this.value && (\n                  <path\n                    class=\"path\"\n                    d=\"M 12 52 l 24 24 l 47 -47 l -3 -3 l -44 44 l -21 -21 l -3 3\"\n                  />\n                )}\n                {this.intermediate && (\n                  <path class=\"path\" d=\"M20 56 h60 v-8 h-60 z\" />\n                )}\n              </svg>\n            </div>\n\n            <div class=\"c-checkbox__label-content\">\n              {!!this.label ? this.label : <slot></slot>}\n              {this.required && <span class=\"required\">&nbsp;*</span>}\n            </div>\n          </label>\n        </div>\n\n        {this._renderMessages()}\n      </Host>\n    );\n  }\n}\n"]}