{"file":"c-radio-group.entry.js","mappings":"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","names":["uuid"],"sources":["./src/components/c-radio-group/c-radio-group.scss?tag=c-radio-group&encapsulation=shadow","./src/components/c-radio-group/c-radio-group.tsx"],"sourcesContent":[":host {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.c-radio-group {\n  --c-radio-flex-direction: column;\n  --c-radio-item-gap: 2px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: fit-content;\n\n  &__items {\n    display: flex;\n    flex-direction: var(--c-radio-flex-direction);\n    flex-wrap: wrap;\n    gap: var(--c-radio-item-gap);\n  }\n\n  &__label {\n    span.required {\n      color: var(--csc-error);\n    }\n  }\n\n  &--disabled {\n    --c-radio-color: var(--csc-mid-grey);\n    --csc-error: var(--csc-mid-grey);\n\n    color: var(--c-radio-color);\n    cursor: default;\n    opacity: 0.75;\n  }\n\n  &--error {\n    --c-radio-color: var(--csc-error);\n\n    color: var(--csc-error);\n  }\n\n  &--inline {\n    --c-radio-flex-direction: row;\n    --c-radio-item-gap: 12px;\n  }\n}\n\n.c-radio {\n  $this: &;\n\n  --c-radio-color: var(--csc-primary);\n\n  align-items: flex-start;\n  display: flex;\n  position: relative;\n  cursor: pointer;\n  font-size: 16px;\n  user-select: none;\n  gap: 4px;\n  line-height: 1.2;\n\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n\n    &:checked ~ .ripple .selection {\n      &::after {\n        display: block;\n        transform: scale(1);\n      }\n    }\n  }\n\n  .ripple {\n    position: relative;\n    height: 42px;\n    width: 42px;\n    min-width: 42px;\n    border-radius: 50%;\n    overflow: hidden;\n    transition: translateZ(0);\n    color: var(--csc-primary);\n  }\n\n  .selection {\n    position: absolute;\n    top: 11px;\n    left: 11px;\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    box-shadow: inset 0 0 0 2px var(--c-radio-color);\n    border-radius: 50%;\n    transition: box-shadow 0.15s ease-in-out;\n\n    &::after {\n      content: '';\n      position: absolute;\n      transform: scale(0);\n      transition: transform 0.15s ease-in-out;\n      top: 5px;\n      left: 5px;\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      background: var(--c-radio-color);\n    }\n  }\n\n  &__details {\n    line-height: 1;\n    padding: 0 12px;\n\n    &.active {\n      #{$this} {\n        &__message {\n          opacity: 1;\n          transform: translateY(0px);\n        }\n      }\n    }\n  }\n\n  &__message {\n    font-size: 12px;\n    opacity: 0;\n    transform: translateY(-4px);\n    transition: all 0.2s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n    &--hint {\n      color: var(--csc-mid-grey);\n    }\n\n    &--error {\n      color: var(--csc-error) !important;\n    }\n\n    span {\n      align-items: flex-start;\n      display: flex;\n      gap: 4px;\n      height: 16px;\n\n      &.error {\n        color: var(--csc-error);\n      }\n\n      &.hint {\n        color: var(--csc-mid-grey);\n      }\n    }\n\n    svg {\n      fill: currentColor;\n      min-height: 16px;\n      min-width: 16px;\n      position: relative;\n      top: -2px;\n    }\n  }\n\n  &__label {\n    padding-top: 12px;\n  }\n\n  &--disabled {\n    --c-radio-color: var(--csc-mid-grey);\n\n    color: var(--c-radio-color);\n    cursor: default;\n    opacity: 0.75;\n  }\n\n  &--error {\n    --c-radio-color: var(--csc-error);\n\n    color: var(--csc-error);\n\n    span,\n    svg {\n      fill: var(--csc-error);\n      color: var(--csc-error);\n    }\n  }\n\n  input:focus {\n    outline: none;\n  }\n\n  input:focus + .ripple {\n    outline: 2px var(--c-radio-color) solid;\n  }\n\n  @supports selector(:focus-visible) {\n    input:focus + .ripple {\n      outline: none;\n    }\n  }\n\n  input:focus-visible + .ripple {\n    outline: 2px var(--c-radio-color) solid;\n  }\n\n  &:not(.c-radio--disabled) {\n    .ripple:hover {\n      background-color: var(--csc-primary-text-hover);\n    }\n  }\n}\n","import {\n  Component,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  Element,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { v4 as uuid } from 'uuid';\nimport { mdiCloseCircle } from '@mdi/js';\nimport { CRadioGroupItem } from '../../types';\nimport { createRipple } from '../../utils/utils';\n\n/**\n * @group Form\n * @slot - Default slot for the label\n */\n@Component({\n  tag: 'c-radio-group',\n  styleUrl: 'c-radio-group.scss',\n  shadow: true,\n})\nexport class CRadioGroup {\n  /**\n   * Value of the radio group\n   */\n  @Prop({ mutable: true }) value: string | number | CRadioGroupItem;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Display radio buttons inline\n   */\n  @Prop() inline = false;\n\n  /**\n   * Label of the radio group\n   */\n  @Prop() label: string;\n\n  /**\n   * Color of the radio group\n   */\n  @Prop() color = '';\n\n  /**\n   * Radio group items\n   */\n  @Prop() items: CRadioGroupItem[] = [];\n\n  /**\n   * Disable the radio group\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Return only the item value rather than the whole item object\n   */\n  @Prop() returnValue: false;\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the valid√≠ty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Emit value change to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @Element() el: HTMLCRadioGroupElement;\n\n  @State() messageOptions = {\n    show: true,\n    type: 'hint',\n    content: '',\n  };\n\n  @Watch('validation')\n  onValidationMessageChange(message: string) {\n    this.onValidChange(message.length === 0);\n  }\n\n  @Watch('valid')\n  onValidChange(valid: boolean) {\n    this._handleValidation(valid || this.valid);\n  }\n\n  componentDidLoad() {\n    this._handleValidation(this.valid, 0);\n  }\n\n  private _containers?: HTMLDivElement[] = [];\n\n  private _uniqueId = uuid();\n\n  private _handleKeyDown(event: KeyboardEvent, item, index) {\n    if (['Space', 'Enter'].includes(event.code)) {\n      event.preventDefault();\n\n      this._select(event, item, index);\n    }\n  }\n\n  private _handleValidation(valid: boolean, timeout = 200) {\n    this.messageOptions = {\n      ...this.messageOptions,\n      show: false,\n    };\n\n    setTimeout(() => {\n      this.messageOptions = {\n        ...this.messageOptions,\n        type: valid ? 'hint' : 'error',\n        show: true,\n        content: valid ? (\n          <span>{this.hint}</span>\n        ) : (\n          <span>\n            {this._validationIcon} {this.validation}\n          </span>\n        ),\n      };\n    }, timeout);\n  }\n\n  private _select(event, item, index) {\n    if (this.disabled) return;\n\n    createRipple(event, this._containers[index], true);\n    this.value = this.returnValue ? item?.value : item;\n    this.changeValue.emit(this.value);\n  }\n\n  private _getRadioButton = (item, index) => {\n    const itemId = item.value.toString().replace(/[^a-zA-Z0-9-_]/g, '');\n    const isChecked = this.returnValue\n      ? this.items?.find((i) => i.value === item.value)?.value === this.value\n      : this.value === item;\n\n    const classes = {\n      'c-radio': true,\n      'c-radio--disabled': this.disabled,\n      'c-radio--error': this.messageOptions.type === 'error',\n    };\n\n    return (\n      <label\n        class={classes}\n        id={itemId}\n        onKeyDown={(event) => this._handleKeyDown(event, item, index)}\n      >\n        <input\n          type=\"radio\"\n          aria-checked={(this.value === item).toString()}\n          aria-disabled={this.disabled.toString()}\n          aria-labelledby={itemId}\n          disabled={this.disabled}\n          checked={isChecked}\n          name={this._uniqueId}\n          onChange={(event) => this._select(event, item, index)}\n        />\n\n        <span\n          class=\"ripple\"\n          ref={(el) => (this._containers[index] = el as HTMLDivElement)}\n        >\n          <span class=\"selection\"></span>\n        </span>\n\n        <div class=\"c-radio__label\">{item.label}</div>\n      </label>\n    );\n  };\n\n  private _renderMessages() {\n    if (this.hideDetails) return;\n\n    const classes = {\n      'c-radio__details': true,\n      active: this.messageOptions.show,\n    };\n\n    const messageClasses = {\n      'c-radio__message': true,\n      [`c-radio__message--${this.messageOptions.type}`]: true,\n    };\n\n    return (\n      <div class={classes}>\n        <div class={messageClasses}>{this.messageOptions.content}</div>\n      </div>\n    );\n  }\n\n  private _validationIcon = (\n    <svg height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\n      <path d={mdiCloseCircle} />\n    </svg>\n  );\n\n  render() {\n    const slotHasContent = !!this.el.childNodes.length;\n\n    const wrapperClasses = {\n      'c-radio-group': true,\n      'c-radio-group--disabled': this.disabled,\n      'c-radio-group--inline': this.inline,\n      'c-radio-group--error': this.messageOptions.type === 'error',\n    };\n\n    return (\n      <div\n        class={wrapperClasses}\n        role=\"radiogroup\"\n        aria-labelledby=\"c-radio-group__label\"\n      >\n        {(!!this.label || slotHasContent) && (\n          <label class=\"c-radio-group__label\">\n            {!!this.label ? this.label : <slot></slot>}\n            {this.required && <span class=\"required\">&nbsp;*</span>}\n          </label>\n        )}\n\n        <div class=\"c-radio-group__items\">\n          {this.items.map((item, index) => this._getRadioButton(item, index))}\n        </div>\n\n        {this._renderMessages()}\n      </div>\n    );\n  }\n}\n"],"version":3}