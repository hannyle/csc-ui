{"file":"c-input.entry.cjs.js","mappings":"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","names":["h","mdiCloseCircle","Host"],"sources":["./src/components/c-input/c-input.scss?tag=c-input","./src/components/c-input/c-input.tsx"],"sourcesContent":[":host {\n  display: block;\n  cursor: text;\n}\n\n:host([disabled]) {\n  ::slotted(input),\n  ::slotted(textarea) {\n    color: rgba(0, 0, 0, 0.5);\n  }\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\n.c-input {\n  $this: &;\n\n  --c-input-border-width: 1px;\n\n  align-items: flex-start;\n  display: flex;\n  flex: 1 1 auto;\n  font-family: $csc-font-family;\n  font-size: 16px;\n  letter-spacing: normal;\n  max-width: 100%;\n  text-align: left;\n  border-radius: 4px;\n\n  input,\n  select,\n  textarea {\n    margin: 0;\n    border: 0;\n    padding: 0;\n    display: inline-block;\n    vertical-align: middle;\n    white-space: normal;\n    background: none;\n    line-height: 1;\n\n    /* Browsers have different default form fonts */\n    font-size: 16px;\n    font-family: $csc-font-family;\n  }\n\n  input,\n  textarea {\n    -webkit-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  input[type='checkbox'],\n  input[type='radio'],\n  select {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  input[type='search'] {\n    -webkit-appearance: textfield;\n    -webkit-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  ::-webkit-search-decoration {\n    display: none;\n  }\n\n  textarea {\n    vertical-align: top;\n    overflow: auto;\n  }\n\n  input {\n    max-height: 32px;\n    padding: 8px 0 8px;\n  }\n\n  textarea {\n    margin-top: 4px;\n    min-height: 44px;\n    padding: 8px 12px 8px 0;\n    resize: vertical;\n  }\n\n  input,\n  textarea {\n    background-color: transparent;\n    border: none;\n    color: rgba(0, 0, 0, 0.87);\n    flex: 1 1 auto;\n    font-family: $csc-font-family;\n    font-size: 16px;\n    line-height: 20px;\n    max-width: 100%;\n    min-width: 0;\n    width: 100%;\n  }\n\n  input:focus,\n  input:active,\n  textarea:focus,\n  textarea:active {\n    outline: none;\n  }\n\n  .c-input__content {\n    align-items: center;\n    display: flex;\n    width: 100%;\n  }\n\n  &__control {\n    border-radius: inherit;\n    color: currentColor;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    flex-wrap: wrap;\n    gap: 8px;\n    height: auto;\n    min-width: 0;\n    width: 100%;\n  }\n\n  &__slot {\n    align-items: stretch;\n    background: transparent;\n    border-radius: inherit;\n    color: inherit;\n    cursor: text;\n    display: flex;\n    min-height: 44px;\n    padding: 0 12px;\n    position: relative;\n    transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n    width: 100%;\n\n    .click-trap {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(128, 255, 0, 0.295);\n    }\n  }\n\n  &__field {\n    align-items: center;\n    display: flex;\n    flex: 1 1 auto;\n    gap: 8px;\n    position: relative;\n\n    input,\n    textarea {\n      flex: 1;\n      outline: 0;\n    }\n\n    label {\n      font-size: 16px;\n      height: 20px;\n      left: 0px;\n      letter-spacing: normal;\n      line-height: 20px;\n      max-width: 90%;\n      min-height: 8px;\n      overflow: hidden;\n      pointer-events: none;\n      position: absolute;\n      right: auto;\n      text-overflow: ellipsis;\n      top: 12px;\n      transform-origin: top left;\n      transform: translateX(var(--c-label-position)) translateY(0) scale(1);\n      transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n      white-space: nowrap;\n\n      &.active {\n        transform: translateY(-18px) scale(0.75);\n      }\n\n      span {\n        color: var(--csc-error);\n      }\n    }\n  }\n\n  &__details {\n    line-height: 1;\n    padding: 0 12px;\n\n    &.active {\n      #{$this} {\n        &__message {\n          opacity: 1;\n          transform: translateY(0px);\n        }\n      }\n    }\n  }\n\n  &__message {\n    font-size: 12px;\n    min-height: 16px;\n    opacity: 0;\n    transform: translateY(-4px);\n    transition: all 0.2s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n    &--hint {\n      color: var(--csc-mid-grey);\n    }\n\n    &--error {\n      color: var(--csc-error);\n    }\n\n    span {\n      align-items: flex-start;\n      color: currentColor;\n      display: flex;\n      gap: 4px;\n      min-height: 16px;\n    }\n\n    svg {\n      fill: currentColor;\n      height: 16px;\n      width: 16px;\n      position: relative;\n      top: -2px;\n    }\n  }\n\n  &--select .c-input__slot {\n    cursor: pointer;\n  }\n\n  fieldset {\n    border-collapse: collapse;\n    border-color: currentColor;\n    border-radius: inherit;\n    border-style: solid;\n    border-width: var(--c-input-border-width);\n    bottom: 0;\n    left: 0;\n    margin: 0;\n    padding-left: 8px;\n    padding: 0;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transition-duration: 0.15s;\n    transition-property: color;\n    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    legend {\n      float: none;\n      line-height: 11px;\n      margin-left: 7px;\n      padding: 0;\n      text-align: left;\n      transition: width 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n      width: 0;\n\n      &.active {\n        width: var(--c-legend-width);\n      }\n    }\n  }\n\n  &--shadow {\n    #{$this} {\n      &__slot {\n        background: #fff;\n        box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;\n\n        &:focus-within {\n          outline: 2px var(--csc-primary) solid;\n        }\n      }\n    }\n  }\n\n  &--disabled {\n    input,\n    textarea,\n    fieldset,\n    label {\n      --csc-error: rgba(0, 0, 0, 0.5);\n\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  &--textarea {\n    #{$this} {\n      &__field {\n        margin-right: -12px;\n      }\n    }\n  }\n\n  ::placeholder {\n    color: rgba(0, 0, 0, 0.46);\n    opacity: 1;\n  }\n\n  &:focus-within,\n  &:not(.c-input--disabled):active {\n    --c-input-border-width: 2px;\n\n    color: var(--csc-primary);\n\n    label {\n      transform: translateX(0px) translateY(-18px) scale(0.75);\n    }\n\n    legend {\n      width: var(--c-legend-width);\n    }\n  }\n\n  &--error {\n    color: var(--csc-error);\n\n    &:focus-within {\n      color: var(--csc-error);\n    }\n  }\n}\n","import {\n  Component,\n  Host,\n  h,\n  State,\n  Prop,\n  Event,\n  EventEmitter,\n  Element,\n  Watch,\n} from '@stencil/core';\nimport { mdiCloseCircle } from '@mdi/js';\nimport { CAutocompleteItem, CSelectItem } from '../../types';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-input',\n  styleUrl: 'c-input.scss',\n  shadow: false,\n})\nexport class CInput {\n  /**\n   * Auto focus the input\n   */\n  @Prop() autofocus = false;\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Render a hidden input outside the shadow dom\n   */\n  @Prop() form = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the input\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Id of the input element\n   */\n  @Prop() inputId: string;\n\n  /**\n   * Label of the input\n   */\n  @Prop() label: string;\n\n  /**\n   * Maximum value on a numeric input\n   */\n  @Prop() max: number = null;\n\n  /**\n   * Minimum value on a numeric input\n   */\n  @Prop() min: number = null;\n\n  /**\n   * Name of the input\n   */\n  @Prop() name: string;\n\n  /**\n   * Numeric input\n   *\n   * @deprecated Use type=\"number\" instead\n   */\n  @Prop() number = false;\n\n  /**\n   * Placeholder of the input\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Mark as readonly\n   */\n  @Prop() readonly = false;\n\n  /**\n   * Set the input as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Rows on the input\n   */\n  @Prop() rows = 1;\n\n  /**\n   * Shadow variant of the input\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Step size on a numeric input\n   */\n  @Prop() step: number = null;\n\n  /**\n   * Type of the input\n   */\n  @Prop() type: string;\n\n  /**\n   * Set the validíty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Value of the input\n   */\n  @Prop() value: string | number | boolean | CSelectItem | CAutocompleteItem;\n\n  /**\n   * Variant\n   */\n  @Prop() variant: 'text' | 'select' = 'text';\n\n  /**\n   * Emit changes to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @State() isFocused = false;\n\n  @State() labelWidth = 0;\n\n  @State() preSlotWidth = 0;\n\n  @State() messageOptions = {\n    show: true,\n    type: 'hint',\n    content: '',\n  };\n\n  @State() statusText = '';\n\n  @Element() hiddenEl!: HTMLCInputElement;\n\n  @Watch('valid')\n  onValidChange(valid: boolean) {\n    if (this.validateOnBlur && !this._hasBlurred) return;\n\n    this._setAriaDescriptionId();\n\n    this._handleValidation(valid);\n  }\n\n  @Watch('validation')\n  onValidationMessageChange(message: string) {\n    this._updateStatusText();\n\n    if (this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Error: </span>\n          {this._validationIcon} {message}\n        </span>\n      ),\n    };\n  }\n\n  @Watch('hint')\n  onHintMessageChange(message: string) {\n    if (!this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Hint: </span>\n          {message}\n        </span>\n      ),\n    };\n  }\n\n  @Watch('value')\n  onValueChange(value) {\n    if (!value) this._onReset();\n  }\n\n  @Watch('placeholder')\n  onPlaceholderChange(placeholder) {\n    if (placeholder) this._onReset();\n  }\n\n  private _hasBlurred = false;\n\n  private _labelRef: HTMLLabelElement;\n\n  private _validationIcon = (\n    <svg height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\n      <path d={mdiCloseCircle} />\n    </svg>\n  );\n\n  private _debounce = null;\n\n  componentDidLoad() {\n    if (this.autofocus) {\n      setTimeout(() => {\n        this._onFocus(false);\n      }, 500);\n    }\n\n    this._handleValidation(this.valid, 0);\n    this._calculateElementWidths();\n    this._setAriaDescriptionId();\n\n    if (this.label) {\n      this._observer.observe(this._labelRef);\n    }\n\n    this.inputField?.addEventListener('focus', () => this._onFocus(false));\n    this.inputField?.addEventListener('blur', () => this._onBlur());\n    this.inputField?.addEventListener(\n      'keypress',\n      this._preventNonNumericalInput,\n    );\n\n    // hide the placeholder text initially if there is a label\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !!this.label || !this.placeholder ? '' : this.placeholder;\n\n      this.inputField.title = this.label ?? this.placeholder;\n    }\n  }\n\n  disconnectedCallback() {\n    this.inputField?.removeEventListener('focus', () => this._onFocus(false));\n    this.inputField?.removeEventListener('blur', () => this._onBlur());\n    this.inputField?.removeEventListener(\n      'keypress',\n      this._preventNonNumericalInput,\n    );\n\n    this._observer.disconnect();\n  }\n\n  get isActive() {\n    return !!this.value || typeof this.value === 'boolean' || this.isFocused;\n  }\n\n  private _setAriaDescriptionId() {\n    this.inputField.removeAttribute('aria-describedby');\n\n    let type = null;\n\n    if (this.valid && !this.value && this.hint) {\n      type = 'hint';\n    }\n\n    if (!this.valid) {\n      type = 'error';\n    }\n\n    if (type) {\n      this.inputField.setAttribute(\n        'aria-describedby',\n        `${type}-${this.inputId}`,\n      );\n    }\n  }\n\n  private _observer = new IntersectionObserver(\n    (entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this._calculateElementWidths();\n          observer.unobserve(entry.target);\n        }\n      });\n    },\n    { threshold: 1 },\n  );\n\n  private _calculateElementWidths() {\n    this.labelWidth = !!this.label ? this._labelRef.scrollWidth * 0.75 + 6 : 0;\n    this.preSlotWidth = this.inputField.offsetLeft;\n  }\n\n  private _handleValidation(valid: boolean, timeout = 200) {\n    this.messageOptions = {\n      ...this.messageOptions,\n      show: false,\n    };\n\n    setTimeout(() => {\n      this.messageOptions = {\n        ...this.messageOptions,\n        type: valid ? 'hint' : 'error',\n        show: true,\n        content: valid ? (\n          <span id={`hint-${this.inputId}`}>\n            <span class=\"visuallyhidden\">Hint: </span>\n            {this.hint}\n          </span>\n        ) : (\n          <span id={`error-${this.inputId}`}>\n            {this._validationIcon}\n            <span class=\"visuallyhidden\">Error: </span>\n            {this.validation}\n          </span>\n        ),\n      };\n    }, timeout);\n  }\n\n  private _onBlur = () => {\n    // delay the blur event to prevent the label from 'flashing' on c-select selection\n    setTimeout(() => {\n      this.isFocused = false;\n      this._hasBlurred = true;\n\n      if (this.validateOnBlur) {\n        this._handleValidation(this.valid);\n      }\n\n      // show the label if there's no label or value\n      this._onReset();\n    }, 100);\n  };\n\n  private _onFocus = (click = true) => {\n    if (this.disabled) return;\n\n    this.isFocused = true;\n\n    this.inputField?.focus();\n\n    if (click) this.inputField?.click();\n\n    // show the label if there's no value\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !!this.value || !this.placeholder ? '' : this.placeholder;\n    }\n  };\n\n  private _onReset() {\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !this.label && !this.value && !!this.placeholder\n          ? this.placeholder\n          : '';\n    }\n  }\n\n  /**\n   * Prevent non numeric values in the numeric fields\n   */\n  private _preventNonNumericalInput(event: KeyboardEvent) {\n    if (this.type !== 'number') return;\n\n    if (!event.key.match(/^[0-9,\\.]+$/)) event.preventDefault();\n  }\n\n  private _renderBorders() {\n    if (this.shadow) return;\n\n    const classes = {\n      active: this.isActive,\n    };\n\n    return (\n      <fieldset aria-hidden=\"true\">\n        <legend\n          class={classes}\n          style={{\n            '--c-legend-width': this.labelWidth + 'px',\n          }}\n        >\n          <span class=\"notranslate\"></span>\n        </legend>\n      </fieldset>\n    );\n  }\n\n  private _renderLabel() {\n    if (!this.label) return;\n\n    const classes = {\n      active: this.isActive,\n    };\n\n    return (\n      <label\n        htmlFor={this.inputId}\n        ref={(el) => (this._labelRef = el as HTMLLabelElement)}\n        class={classes}\n      >\n        {this.label}\n        {this.required && <span>&nbsp;*</span>}\n      </label>\n    );\n  }\n\n  get inputField() {\n    return this.hiddenEl?.querySelector('.c-input__input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n  }\n\n  private _renderMessages() {\n    if (this.hideDetails) return;\n\n    const classes = {\n      'c-input__details': true,\n      active: this.messageOptions.show,\n    };\n\n    const messageClasses = {\n      'c-input__message': true,\n      [`c-input__message--${this.messageOptions.type}`]: true,\n    };\n\n    return (\n      <div class={classes}>\n        <div class={messageClasses}>{this.messageOptions.content}</div>\n      </div>\n    );\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      this.statusText = this.valid ? '' : `Error: ${this.validation}`;\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  render() {\n    const containerClasses = {\n      'c-input': true,\n      'c-input--disabled': this.disabled,\n      'c-input--shadow': this.shadow,\n      'c-input--textarea': this.rows > 1,\n      'c-input--error': this.messageOptions.type === 'error',\n      [`c-input--${this.variant}`]: true,\n    };\n\n    return (\n      <Host disabled={this.disabled}>\n        <div\n          id={'announce-' + this.inputId}\n          class=\"visuallyhidden\"\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n        >\n          {this.statusText}\n        </div>\n\n        <div class={containerClasses}>\n          <div class=\"c-input__control\">\n            <div class=\"c-input__slot\" onClick={() => this._onFocus()}>\n              {this._renderBorders()}\n\n              <div\n                class=\"c-input__field\"\n                style={{\n                  '--c-label-position': this.preSlotWidth + 'px',\n                }}\n              >\n                <slot name=\"pre\"></slot>\n\n                {this._renderLabel()}\n\n                <slot></slot>\n\n                <slot name=\"post\"></slot>\n              </div>\n            </div>\n\n            {this._renderMessages()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}