{"file":"c-switch.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,UAAU,GAAG,yuFAAyuF;;MCkB/uF,OAAO;;;;IAoCV,yBAAoB,GAAG,CAAC,KAAY;MAC1C,MAAM,KAAK,GAAI,KAAK,CAAC,aAAkC,CAAC,OAAO,CAAC;MAEhE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAC;wBArC8C,KAAK;;oBAUlC,KAAK;iBAKS,KAAK;oBAIlB,KAAK;;EAOzB,gBAAgB;IACd,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAErC,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;GAC/C;EASD,MAAM;IACJ,MAAM,OAAO,GAAG;MACd,UAAU,EAAE,IAAI;MAChB,oBAAoB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY;MACzC,iBAAiB,EAAE,IAAI,CAAC,QAAQ;KACjC,CAAC;IAEF,QACEA,mBAAO,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,IACzCA,iBAAK,KAAK,EAAC,iBAAiB,IAC1BA,mBACE,EAAE,EAAE,IAAI,CAAC,MAAM,kBACD,IAAI,CAAC,KAAK,EACxB,IAAI,EAAC,UAAU,EACf,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,OAAO,EAAE,IAAI,CAAC,KAAK,EACnB,OAAO,EAAE,IAAI,CAAC,oBAAoB,GAClC,EACFA,kBAAM,KAAK,EAAC,kBAAkB,GAAQ,CAClC,EACL,IAAI,CAAC,QAAQ,IACZA,iBAAK,KAAK,EAAC,iBAAiB,IAC1BA,qBAAa,EAEZ,IAAI,CAAC,QAAQ,IAAIA,kBAAM,KAAK,EAAC,UAAU,cAAe,CACnD,IACJ,IAAI,CACF,EACR;GACH;;;;;;;","names":["h"],"sources":["./src/components/c-switch/c-switch.scss?tag=c-switch&encapsulation=shadow","./src/components/c-switch/c-switch.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n}\n\n.c-switch {\n  --border-color: var(--csc-dark-grey);\n  --thumb-color: var(--csc-dark-grey);\n  --thumb-margin: 5px;\n  --slider-color: transparent;\n  --switch-pointer: pointer;\n  --switch-height: 22px;\n  --switch-width: 44px;\n  --thumb-size: calc(var(--switch-height) - 2 * var(--thumb-margin));\n  --thumb-active-position: calc(\n    var(--switch-width) - var(--thumb-size) - 2 * var(--thumb-margin)\n  );\n\n  $this: &;\n\n  display: inline-grid;\n  height: var(--switch-height);\n  position: relative;\n\n  grid-template-columns: 1fr;\n  gap: 12px;\n  align-items: center;\n\n  &--disabled {\n    --switch-pointer: default;\n    --thumb-color: var(--csc-mid-grey);\n    --slider-color: var(--csc-light-grey);\n    --border-color: transparent;\n    --csc-error: var(--csc-mid-grey);\n\n    color: var(--csc-mid-grey);\n  }\n\n  &--label {\n    grid-template-columns: var(--switch-width) auto;\n  }\n\n  &__label {\n    span.required {\n      color: var(--csc-error);\n    }\n  }\n\n  &__input {\n    height: var(--switch-height);\n    position: relative;\n    width: var(--switch-width);\n    align-self: start;\n  }\n\n  &__slider {\n    background-color: var(--slider-color);\n    border-radius: var(--switch-height);\n    box-shadow: inset 0 0 0 2px var(--border-color);\n    bottom: 0;\n    cursor: var(--switch-pointer);\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transform-origin: 50% 50%;\n    transition: 0.4s;\n\n    &::before {\n      background-color: var(--thumb-color);\n      border-radius: 50%;\n      bottom: var(--thumb-margin);\n      content: '';\n      height: var(--thumb-size);\n      left: var(--thumb-margin);\n      position: absolute;\n      transition: 0.4s;\n      width: var(--thumb-size);\n    }\n  }\n\n  input {\n    height: 0;\n    opacity: 0;\n    width: 0;\n\n    &:checked {\n      + {\n        #{$this} {\n          &__slider {\n            --thumb-color: #fff;\n            --slider-color: var(--csc-primary);\n            --border-color: var(--csc-primary);\n\n            &::before {\n              transform: translateX(var(--thumb-active-position));\n            }\n          }\n        }\n      }\n    }\n\n    &:focus {\n      + {\n        #{$this} {\n          &__slider {\n            outline: none;\n          }\n        }\n      }\n    }\n    &:focus-visible {\n      + {\n        #{$this} {\n          &__slider {\n            outline: 2px var(--csc-primary) solid;\n            outline-offset: 2px;\n          }\n        }\n      }\n    }\n  }\n}\n","import {\n  Component,\n  h,\n  Element,\n  Prop,\n  State,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\n\n/**\n * @group Form\n */\n@Component({\n  tag: 'c-switch',\n  styleUrl: 'c-switch.scss',\n  shadow: true,\n})\nexport class CSwitch {\n  /**\n   * Disable the switch\n   */\n  @Prop({ attribute: 'disabled' }) hostDisabled = false;\n\n  /**\n   * Id for the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Value of the element\n   */\n  @Prop({ mutable: true }) value = false;\n\n  @Element() host: HTMLCSwitchElement;\n\n  @State() hasLabel = false;\n\n  /**\n   * Emit inner value change to parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter<boolean>;\n\n  componentDidLoad() {\n    const slotted = this.host.childNodes;\n\n    this.hasLabel = slotted && slotted.length > 0;\n  }\n\n  private _valueChangedHandler = (event: Event) => {\n    const value = (event.currentTarget as HTMLInputElement).checked;\n\n    this.value = value;\n    this.changeValue.emit(value);\n  };\n\n  render() {\n    const classes = {\n      'c-switch': true,\n      'c-switch--disabled': !!this.hostDisabled,\n      'c-switch--label': this.hasLabel,\n    };\n\n    return (\n      <label class={classes} htmlFor={this.hostId}>\n        <div class=\"c-switch__input\">\n          <input\n            id={this.hostId}\n            aria-checked={this.value}\n            type=\"checkbox\"\n            role=\"switch\"\n            disabled={this.hostDisabled}\n            checked={this.value}\n            onInput={this._valueChangedHandler}\n          />\n          <span class=\"c-switch__slider\"></span>\n        </div>\n        {this.hasLabel ? (\n          <div class=\"c-switch__label\">\n            <slot></slot>\n\n            {this.required && <span class=\"required\">&nbsp;*</span>}\n          </div>\n        ) : null}\n      </label>\n    );\n  }\n}\n"],"version":3}