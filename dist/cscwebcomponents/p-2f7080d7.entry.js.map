{"version":3,"names":["cInputMenuCss","CAutocomplete","this","_itemRefs","_uniqueId","uuid","_direction","_debounce","_observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","target","scrollIntoView","block","inline","unobserve","threshold","async","event","item","_select","_valueChangedHandler","isItem","element","currentIndex","items","findIndex","value","returnValue","changeValue","emit","watchHandler","newValue","oldValue","length","_updateStatusText","handleKeyDown","ev","key","menuVisible","name","query","preventDefault","customMenu","currentItem","_getItemRef","prevItem","toggleAttribute","setAttribute","_scrollToElement","keyCode","selectedItem","index","itemRef","_a","find","ref","itemsPerPage","observe","statusText","clearTimeout","window","setTimeout","word","ending","selection","host","shadowRoot","querySelector","selectionText","innerHTML","ariaPosInSet","ariaSetSize","handleChange","changeQuery","stopPropagation","componentWillLoad","_id","_b","hostId","replace","_inputId","label","placeholder","componentDidLoad","addEventListener","matches","disconnectedCallback","disconnect","_getActiveListItemId","_handleFocus","_renderChevron","classes","h","class","viewBox","d","mdiChevronDown","_renderEmptyMenu","tabindex","mdiAlert","_renderCustomMenu","style","document","querySelectorAll","shadow","id","_renderMenu","role","map","toString","el","push","onClick","_renderInputElement","type","autocomplete","onInput","onFocus","render","itemsPerPageStyle","slotContent","i","Host","autofocus","disabled","hideDetails","hint","required","valid","validate","validateOnBlur","validation","slot"],"sources":["./src/components/c-input/c-input-menu.scss?tag=c-autocomplete&encapsulation=shadow","./src/components/c-autocomplete/c-autocomplete.tsx"],"sourcesContent":[":host {\n  display: block;\n  cursor: text;\n}\n\n.c-input-menu {\n  &__chevron {\n    fill: currentColor;\n    height: 22px;\n    width: 22px;\n    min-width: 22px;\n    transform: rotate(0deg);\n    transition: transform 0.3s ease-in-out;\n\n    &--active {\n      transform: rotate(180deg);\n    }\n  }\n\n  &__input {\n    width: 100%;\n    display: flex;\n  }\n\n  &__item-wrapper {\n    position: absolute;\n    width: 100%;\n    top: 44px;\n    z-index: 10;\n    margin-left: calc(var(--c-label-position) * -1);\n\n    &--shadow {\n      top: 47px;\n    }\n  }\n\n  &__items {\n    position: absolute;\n    background-color: #ffffff;\n    min-width: calc(100% + 24px);\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n    z-index: 10;\n    user-select: none;\n    border-radius: 4px;\n    margin: 0 -12px;\n    overflow-y: scroll;\n    list-style: none;\n    padding: 0;\n\n    &--hidden {\n      display: none;\n    }\n\n    li {\n      cursor: pointer;\n      display: flex;\n      height: 48px;\n      padding: 0 12px;\n      transition: background-color 0.3s;\n      font-size: 14px;\n      align-items: center;\n      justify-content: flex-start;\n      color: rgba(0, 0, 0, 0.87);\n\n      &.dense {\n        padding: 10px 14px;\n      }\n\n      &:hover {\n        background-color: var(--csc-primary-text-hover);\n      }\n\n      &[aria-selected='true'] {\n        background-color: var(--csc-primary-text-hover);\n      }\n\n      &.none {\n        color: rgba(0, 0, 0, 0.5);\n      }\n    }\n\n    &--empty {\n      li {\n        color: rgba(0, 0, 0, 0.54);\n        cursor: default;\n        gap: 8px;\n        pointer-events: none;\n\n        svg {\n          fill: currentColor;\n          height: 18px;\n          width: 18px;\n        }\n      }\n    }\n  }\n}\n\ninput {\n  max-height: 32px;\n  padding: 8px 0 8px;\n  background-color: transparent;\n  border: none;\n  color: rgba(0, 0, 0, 0.87);\n  flex: 1 1 auto;\n  font-family: $csc-font-family;\n  font-size: 16px;\n  line-height: 20px;\n  max-width: 100%;\n  min-width: 0;\n  width: 100%;\n  pointer-events: none;\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &::-ms-reveal {\n    display: none;\n  }\n}\n\nsvg {\n  fill: currentColor;\n  height: 22px;\n  width: 22px;\n}\n\n.c-input {\n  $this: &;\n\n  &--disabled {\n    color: var(--csc-mid-grey);\n  }\n\n  &:focus-within {\n    color: var(--csc-primary);\n  }\n\n  &--error {\n    color: var(--csc-error);\n\n    &:focus-within {\n      color: var(--csc-error);\n    }\n  }\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n","import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  h,\n  Listen,\n  Event,\n  EventEmitter,\n  Watch,\n  Method,\n} from '@stencil/core';\nimport { mdiChevronDown, mdiAlert } from '@mdi/js';\nimport { v4 as uuid } from 'uuid';\nimport { CAutocompleteItem } from '../../types';\n\n/**\n * @group Form\n */\n@Component({\n  tag: 'c-autocomplete',\n  styleUrl: '../c-input/c-input-menu.scss',\n  shadow: true,\n})\nexport class CAutocomplete {\n  /**\n   * Auto focus the input\n   */\n  @Prop() autofocus = false;\n\n  /**\n    Render custom menu\n  */\n\n  @Prop() customMenu = false;\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Shadow variant\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Input field name\n   */\n  @Prop() name: string;\n\n  /**\n   * Element label\n   */\n  @Prop() label: string;\n\n  /**\n   * Search string\n   */\n  @Prop({ mutable: true }) query: string = null;\n\n  /**\n   * Selected item\n   */\n  @Prop({ mutable: true }) value: string | number | CAutocompleteItem = null;\n\n  /**\n   * Dense variant\n   */\n  @Prop() dense: boolean;\n\n  /**\n   * Show required validation\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the valid√≠ty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Placeholder text\n   */\n  @Prop() placeholder = '';\n\n  /**\n   * Return only the item value rather than the whole item object\n   */\n  @Prop() returnValue: false;\n\n  /**\n   * Items to be selected\n   */\n  @Prop() items: CAutocompleteItem[] = [];\n\n  /**\n   * Items per page before adding scroll\n   */\n  @Prop() itemsPerPage: number;\n\n  /**\n   * Triggered when text is typed\n   */\n  @Event() changeQuery: EventEmitter;\n\n  /**\n   * Triggered when an item is selected\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  /**\n   * Sets the value of the autocomplete externally\n   */\n  @Method()\n  async setValue(event, item) {\n    this._select(event, item);\n  }\n\n  private _valueChangedHandler(item: string | number | CAutocompleteItem) {\n    function isItem(element) {\n      return element === item;\n    }\n\n    this.currentIndex = this.items.findIndex(isItem);\n\n    const value = this.returnValue ? (item as CAutocompleteItem)?.value : item;\n\n    this.changeValue.emit(value);\n  }\n\n  private _itemRefs: { value: string | number | boolean; ref: HTMLElement }[] =\n    [];\n\n  private _id: string;\n\n  private _inputId: string;\n\n  private _uniqueId = uuid();\n\n  private _direction = null;\n\n  private _debounce = null;\n\n  @Element() host: HTMLCAutocompleteElement;\n\n  @State() menuVisible = false;\n\n  @State() currentIndex: number = null;\n\n  @State() statusText = '';\n\n  @Watch('items')\n  watchHandler(newValue, oldValue) {\n    if (newValue.length !== oldValue.length) {\n      this.currentIndex = !!newValue.length ? 0 : null;\n\n      this._updateStatusText();\n    }\n  }\n\n  @Listen('keydown', { passive: true })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === 'Escape') {\n      this.menuVisible = false;\n      this.currentIndex = null;\n\n      return;\n    }\n\n    if (ev.key === 'Tab') {\n      this.menuVisible = false;\n\n      const item = this.items[this.currentIndex];\n\n      if (!item) return;\n\n      const { name, value } = item;\n\n      this.query = name;\n      this.changeValue.emit(this.returnValue ? value : item);\n    }\n\n    if (ev.key === 'ArrowDown') {\n      this._direction = 'end';\n      ev.preventDefault();\n\n      if (!this.menuVisible) {\n        this.menuVisible = true;\n\n        return;\n      }\n\n      if (this.currentIndex === null) {\n        this.currentIndex = 0;\n      } else if (this.currentIndex + 1 < this.items.length) {\n        this.currentIndex += 1;\n      }\n\n      if (this.customMenu && this.currentIndex > 0) {\n        const currentItem = this._getItemRef(this.currentIndex);\n        const prevItem = this._getItemRef(this.currentIndex - 1);\n        prevItem.toggleAttribute('aria-selected');\n        currentItem.setAttribute('aria-selected', 'true');\n      }\n\n      this._scrollToElement();\n    }\n\n    if (ev.key === 'ArrowUp') {\n      this._direction = 'start';\n      ev.preventDefault();\n\n      if (!this.menuVisible) {\n        this.menuVisible = true;\n\n        return;\n      }\n\n      if (this.currentIndex > 0) {\n        this.currentIndex -= 1;\n      } else if (this.currentIndex === null) {\n        this.currentIndex = this.items.length - 1;\n      }\n\n      if (this.customMenu && this.currentIndex >= 0) {\n        const currentItem = this._getItemRef(this.currentIndex);\n        const prevItem = this._getItemRef(this.currentIndex + 1);\n        prevItem.toggleAttribute('aria-selected');\n        currentItem.setAttribute('aria-selected', 'true');\n      }\n\n      this._scrollToElement();\n    }\n\n    if (ev.keyCode === 32) {\n      if (!this.menuVisible) {\n        this.menuVisible = true;\n        ev.preventDefault();\n      }\n    }\n\n    if (ev.key === 'Enter') {\n      if (this.currentIndex !== null) {\n        const selectedItem = this.items[this.currentIndex];\n        this._select(ev, selectedItem);\n        this.menuVisible = false;\n      }\n    }\n  }\n\n  private _getItemRef(index) {\n    const itemRef = this._itemRefs.find(\n      (item) => item.value === this.items[index].value,\n    )?.ref;\n\n    return itemRef;\n  }\n\n  private _observer = new IntersectionObserver(\n    (entries, observer) => {\n      entries.forEach((entry) => {\n        if (!entry.isIntersecting) {\n          entry.target.scrollIntoView({\n            block: this._direction,\n            inline: 'nearest',\n          });\n          observer.unobserve(entry.target);\n        } else {\n          observer.unobserve(entry.target);\n        }\n      });\n    },\n    { threshold: 1 },\n  );\n\n  private _scrollToElement() {\n    if (this.items.length > this.itemsPerPage) {\n      const itemRef = this._getItemRef(this.currentIndex);\n\n      if (!!itemRef) {\n        this._observer.observe(itemRef);\n      }\n    }\n\n    this._updateStatusText();\n  }\n\n  private _updateStatusText() {\n    this.statusText = this.query;\n\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      const word = this.items.length === 1 ? 'suggestion' : 'suggestions';\n      const ending = !!this.items.length\n        ? ', to navigate use up and down arrows'\n        : '.';\n\n      const selection = this.host.shadowRoot.querySelector(\n        'li[aria-selected=\"true\"]',\n      );\n\n      const selectionText = !!selection\n        ? `. ${selection.innerHTML} ${selection.ariaPosInSet} of ${selection.ariaSetSize} is highlighted`\n        : null;\n\n      this.statusText = `${this.items.length} ${word} found${\n        selectionText || ending\n      }`;\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  private handleChange(event) {\n    this.menuVisible = true;\n    this.query = event.target.value;\n    this.changeQuery.emit(this.query);\n    this.changeValue.emit(null);\n\n    if (!this.query.length) {\n      this.statusText = '';\n    }\n  }\n\n  private _select(event, item) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.query = item.name;\n    this.value = item;\n    this._valueChangedHandler(item);\n    this.menuVisible = false;\n  }\n\n  componentWillLoad() {\n    this._id = this.hostId?.replace(/[^a-zA-Z0-9-_]/g, '') ?? this._uniqueId;\n    this._inputId =\n      'input_' +\n      (this.hostId || this.label || this.placeholder).replace(\n        /[^a-zA-Z0-9-_]/g,\n        '',\n      );\n  }\n\n  componentDidLoad() {\n    window.addEventListener('click', (event: MouseEvent) => {\n      if (!(event.target as HTMLElement).matches('c-autocomplete')) {\n        this.menuVisible = false;\n        this.currentIndex = null;\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    this._observer.disconnect();\n  }\n\n  private _getActiveListItemId() {\n    return `option--${this._id}-${this.currentIndex}`;\n  }\n\n  private _handleFocus(event: FocusEvent) {\n    const { value } = event.target as HTMLInputElement;\n\n    if (!!value) {\n      this.menuVisible = true;\n    }\n\n    this.statusText = '';\n\n    this._updateStatusText();\n  }\n\n  private _renderChevron() {\n    const classes = {\n      'c-input-menu__chevron': true,\n      'c-input-menu__chevron--active': this.menuVisible,\n    };\n\n    return (\n      <svg class={classes} viewBox=\"0 0 24 24\">\n        <path d={mdiChevronDown} />\n      </svg>\n    );\n  }\n\n  private _renderEmptyMenu() {\n    return (\n      <ul class=\"c-input-menu__items c-input-menu__items--empty\">\n        <li tabindex=\"-1\">\n          <svg viewBox=\"0 0 24 24\">\n            <path d={mdiAlert} />\n          </svg>\n          No suggestions found\n        </li>\n      </ul>\n    );\n  }\n\n  private _renderCustomMenu(style) {\n    if (this.currentIndex === 0 && this.menuVisible) {\n      const selectedItem = document.querySelectorAll(\n        'div[aria-selected = \"true\"]',\n      );\n\n      if (selectedItem.length === 1) {\n        /**\n          When currentIndex is 0 and there is no query text,\n          remove aria-selected attribute from current highlighted item\n         */\n        selectedItem[0].toggleAttribute('aria-selected');\n      }\n\n      const currentItem = this._getItemRef(this.currentIndex);\n      currentItem.setAttribute('aria-selected', 'true');\n    }\n\n    return (\n      <div\n        class={{\n          'c-input-menu__item-wrapper': true,\n          'c-input-menu__item-wrapper--shadow': this.shadow,\n        }}\n      >\n        {!!this.items.length && this.menuVisible && (\n          <div\n            id={'results_' + this._id}\n            class={\n              this.menuVisible\n                ? 'c-input-menu__items'\n                : 'c-input-menu__items c-input-menu__items--hidden'\n            }\n            style={style}\n          >\n            <slot name=\"customMenu\" />\n          </div>\n        )}\n        {!this.items.length &&\n          this.menuVisible &&\n          this.query.length > 0 &&\n          this._renderEmptyMenu()}\n      </div>\n    );\n  }\n\n  private _renderMenu(style) {\n    return (\n      <div\n        class={{\n          'c-input-menu__item-wrapper': true,\n          'c-input-menu__item-wrapper--shadow': this.shadow,\n        }}\n      >\n        {!!this.items.length && (\n          <ul\n            id={'results_' + this._id}\n            class={\n              this.menuVisible\n                ? 'c-input-menu__items'\n                : 'c-input-menu__items c-input-menu__items--hidden'\n            }\n            role=\"listbox\"\n            style={style}\n          >\n            {this.menuVisible &&\n              this.items.map((item, index) => (\n                <li\n                  id={`option--${this._id}-${index}`}\n                  aria-posinset={(index + 1).toString()}\n                  aria-setsize={this.items.length.toString()}\n                  aria-selected={(this.currentIndex === index).toString()}\n                  role=\"option\"\n                  tabindex=\"-1\"\n                  ref={(el) => {\n                    item.ref = el as HTMLElement;\n                    this._itemRefs.push({\n                      value: item.value,\n                      ref: el as HTMLElement,\n                    });\n                  }}\n                  onClick={(event) => this._select(event, item)}\n                >\n                  {item.name}\n                </li>\n              ))}\n          </ul>\n        )}\n        {!this.items.length && this.menuVisible && this._renderEmptyMenu()}\n      </div>\n    );\n  }\n\n  private _renderInputElement() {\n    return (\n      <div class=\"c-input-menu__input\">\n        <input\n          type=\"text\"\n          aria-expanded={this.menuVisible.toString()}\n          aria-owns={'results_' + this._id}\n          aria-autocomplete=\"list\"\n          aria-activedescendant={this._getActiveListItemId()}\n          autocomplete=\"off\"\n          class=\"c-input__input\"\n          role=\"combobox\"\n          value={this.query}\n          name={this.name ?? null}\n          onInput={(event) => this.handleChange(event)}\n          onFocus={(event) => this._handleFocus(event)}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    this._itemRefs = [];\n    let itemsPerPageStyle = {};\n\n    if (\n      this.itemsPerPage &&\n      this.itemsPerPage > 0 &&\n      this.items.length > this.itemsPerPage\n    ) {\n      itemsPerPageStyle = {\n        'max-height': 48 * this.itemsPerPage + 'px',\n      };\n    }\n\n    if (this.customMenu) {\n      const slotContent = document.querySelectorAll('[slot=\"customMenu\"]');\n\n      for (let i = 0; i < this.items.length; i++) {\n        this._itemRefs.push({\n          value: this.items[i].value,\n          ref: slotContent[i] as HTMLElement,\n        });\n      }\n    }\n\n    return (\n      <Host>\n        <div\n          id={'announce-' + this._id}\n          class=\"visuallyhidden\"\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n        >\n          {this.statusText}\n        </div>\n\n        <c-input\n          autofocus={this.autofocus}\n          disabled={this.disabled}\n          hide-details={this.hideDetails}\n          hint={this.hint}\n          id={this.hostId}\n          input-id={this._inputId}\n          label={this.label}\n          name={this.name}\n          placeholder={this.placeholder}\n          required={this.required}\n          shadow={this.shadow}\n          valid={this.valid}\n          validate={this.validate}\n          validate-on-blur={this.validateOnBlur}\n          validation={this.validation}\n          value={this.query}\n        >\n          <slot name=\"pre\" slot=\"pre\"></slot>\n\n          <div class=\"c-input__content\">\n            {this._renderInputElement()}\n            {this.customMenu\n              ? this._renderCustomMenu(itemsPerPageStyle)\n              : this._renderMenu(itemsPerPageStyle)}\n            {this._renderChevron()}\n          </div>\n\n          <slot name=\"post\" slot=\"post\"></slot>\n        </c-input>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}