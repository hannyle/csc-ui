{"version":3,"names":["cTabsCss","CTabs","onExternalValueChange","this","_handleActiveTab","changeValue","emit","value","tabChangeHandler","e","detail","handleKeyDown","event","key","code","target","handleKeyUp","ev","isArrowLeft","isArrowRight","tabIndex","_getTabIndex","firstAvailableValue","availableValues","at","lastAvailableValue","isBeginning","isEnd","nextValue","previousValue","componentDidLoad","tabs","Array","from","el","childNodes","filter","tab","tagName","setsize","length","disabled","map","findIndex","isUserAction","position","forEach","isActive","active","focus","render","classes","borderless","h","Host","role","class"],"sources":["./src/components/c-tabs/c-tabs.scss?tag=c-tabs&encapsulation=shadow","./src/components/c-tabs/c-tabs.tsx"],"sourcesContent":[":host(.c-tabs) {\n  box-shadow: inset 0 -1px 0 0 var(--csc-light-grey);\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n:host(.c-tabs--borderless) {\n  box-shadow: none;\n}\n","import {\n  Component,\n  h,\n  Host,\n  Element,\n  Event,\n  Prop,\n  EventEmitter,\n  Listen,\n  Watch,\n} from '@stencil/core';\n\n/**\n * @group Content Selectors\n * @slot - Default slot\n */\n@Component({\n  tag: 'c-tabs',\n  styleUrl: 'c-tabs.scss',\n  shadow: true,\n})\nexport class CTabs {\n  /**\n   * Currently active tab\n   */\n  @Prop({ mutable: true }) value!: number | string;\n\n  /**\n   * Disable the bottom border\n   */\n  @Prop() borderless = false;\n\n  /**\n   * Emit changes to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @Element() el: HTMLCTabsElement;\n\n  @Watch('value')\n  onExternalValueChange() {\n    this._handleActiveTab();\n    this.changeValue.emit(this.value);\n  }\n\n  @Listen('tabChange', { passive: true })\n  tabChangeHandler(e) {\n    this.value = e.detail;\n  }\n\n  @Listen('keydown', { capture: true })\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter' || event.code === 'Space') {\n      this.value = (event.target as HTMLCTabElement).value;\n    }\n  }\n\n  @Listen('keyup', { capture: true })\n  handleKeyUp(ev: KeyboardEvent) {\n    const isArrowLeft = ev.key === 'ArrowLeft';\n    const isArrowRight = ev.key === 'ArrowRight';\n    const tabIndex = this._getTabIndex(this.value);\n\n    const firstAvailableValue = this.availableValues.at(0);\n    const lastAvailableValue = this.availableValues.at(-1);\n\n    const isBeginning = this.value === firstAvailableValue;\n    const isEnd = this.value === lastAvailableValue;\n\n    const nextValue = isEnd\n      ? firstAvailableValue\n      : this.availableValues[tabIndex + 1];\n    const previousValue = isBeginning\n      ? lastAvailableValue\n      : this.availableValues[tabIndex - 1];\n\n    if (!isArrowRight && !isArrowLeft) return;\n\n    if (isArrowLeft) {\n      this.value = previousValue;\n    }\n\n    if (isArrowRight) {\n      this.value = nextValue;\n    }\n\n    this._handleActiveTab(true);\n\n    this.changeValue.emit(this.value);\n  }\n\n  componentDidLoad() {\n    this._handleActiveTab();\n  }\n\n  get tabs() {\n    return (Array.from(this.el.childNodes) as HTMLCTabElement[]).filter(\n      (tab) => tab.tagName === 'C-TAB',\n    );\n  }\n\n  get setsize() {\n    return this.tabs.length;\n  }\n\n  get availableValues() {\n    return this.tabs.filter((tab) => !tab.disabled).map((tab) => tab.value);\n  }\n\n  private _getTabIndex(value: string | number) {\n    return this.availableValues.findIndex((tab) => tab === value);\n  }\n\n  private _handleActiveTab(isUserAction = false) {\n    let position = 0;\n\n    this.tabs.forEach((tab: HTMLCTabElement) => {\n      if (!tab.disabled) {\n        position += 1;\n      }\n\n      const isActive = tab.value === this.value;\n\n      tab.active = isActive;\n\n      if (!isUserAction && !tab.disabled) {\n        tab.position = position;\n        tab.setsize = this.availableValues.length;\n      }\n\n      if (isActive && isUserAction) {\n        tab.focus();\n      }\n    });\n  }\n\n  render() {\n    const classes = {\n      'c-tabs': true,\n      'c-tabs--borderless': this.borderless,\n    };\n\n    return (\n      <Host role=\"tablist\" class={classes}>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gEAAA,MAAMA,EAAW,4kC,MCqBJC,EAAK,M,uGASK,K,CAUrBC,wBACEC,KAAKC,mBACLD,KAAKE,YAAYC,KAAKH,KAAKI,M,CAI7BC,iBAAiBC,GACfN,KAAKI,MAAQE,EAAEC,M,CAIjBC,cAAcC,GACZ,GAAIA,EAAMC,MAAQ,SAAWD,EAAME,OAAS,QAAS,CACnDX,KAAKI,MAASK,EAAMG,OAA2BR,K,EAKnDS,YAAYC,GACV,MAAMC,EAAcD,EAAGJ,MAAQ,YAC/B,MAAMM,EAAeF,EAAGJ,MAAQ,aAChC,MAAMO,EAAWjB,KAAKkB,aAAalB,KAAKI,OAExC,MAAMe,EAAsBnB,KAAKoB,gBAAgBC,GAAG,GACpD,MAAMC,EAAqBtB,KAAKoB,gBAAgBC,IAAI,GAEpD,MAAME,EAAcvB,KAAKI,QAAUe,EACnC,MAAMK,EAAQxB,KAAKI,QAAUkB,EAE7B,MAAMG,EAAYD,EACdL,EACAnB,KAAKoB,gBAAgBH,EAAW,GACpC,MAAMS,EAAgBH,EAClBD,EACAtB,KAAKoB,gBAAgBH,EAAW,GAEpC,IAAKD,IAAiBD,EAAa,OAEnC,GAAIA,EAAa,CACff,KAAKI,MAAQsB,C,CAGf,GAAIV,EAAc,CAChBhB,KAAKI,MAAQqB,C,CAGfzB,KAAKC,iBAAiB,MAEtBD,KAAKE,YAAYC,KAAKH,KAAKI,M,CAG7BuB,mBACE3B,KAAKC,kB,CAGH2B,WACF,OAAQC,MAAMC,KAAK9B,KAAK+B,GAAGC,YAAkCC,QAC1DC,GAAQA,EAAIC,UAAY,S,CAIzBC,cACF,OAAOpC,KAAK4B,KAAKS,M,CAGfjB,sBACF,OAAOpB,KAAK4B,KAAKK,QAAQC,IAASA,EAAII,WAAUC,KAAKL,GAAQA,EAAI9B,O,CAG3Dc,aAAad,GACnB,OAAOJ,KAAKoB,gBAAgBoB,WAAWN,GAAQA,IAAQ9B,G,CAGjDH,iBAAiBwC,EAAe,OACtC,IAAIC,EAAW,EAEf1C,KAAK4B,KAAKe,SAAST,IACjB,IAAKA,EAAII,SAAU,CACjBI,GAAY,C,CAGd,MAAME,EAAWV,EAAI9B,QAAUJ,KAAKI,MAEpC8B,EAAIW,OAASD,EAEb,IAAKH,IAAiBP,EAAII,SAAU,CAClCJ,EAAIQ,SAAWA,EACfR,EAAIE,QAAUpC,KAAKoB,gBAAgBiB,M,CAGrC,GAAIO,GAAYH,EAAc,CAC5BP,EAAIY,O,KAKVC,SACE,MAAMC,EAAU,CACd,SAAU,KACV,qBAAsBhD,KAAKiD,YAG7B,OACEC,EAACC,EAAI,CAACC,KAAK,UAAUC,MAAOL,GAC1BE,EAAA,a"}