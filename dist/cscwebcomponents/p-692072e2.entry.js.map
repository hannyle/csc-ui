{"version":3,"names":["cLinkCss","CLink","render","CSCColor","color","classList","underline","this","icon","path","iconAfter","iconStyle","Object","assign","fill","iconFill","style","fontWeight","weight","toString","h","class","href","target","name","width","height","viewBox","d"],"sources":["./src/components/c-link/c-link.scss?tag=c-link&encapsulation=shadow","./src/components/c-link/c-link.tsx"],"sourcesContent":["$icon-margin: 4px;\n\na {\n  display: inline-flex;\n  cursor: pointer;\n  font-size: 16px;\n  text-decoration: none;\n}\n\na.icon {\n  display: flex;\n  align-items: center;\n  & svg {\n    margin-right: $icon-margin;\n  }\n}\n\na.icon-after {\n  flex-direction: row-reverse;\n  & svg {\n    margin-left: $icon-margin;\n  }\n}\n\na.underline {\n  text-decoration: underline;\n}\n\n\n","import { Component, h, Prop } from '@stencil/core';\nimport { CSCColor } from '../../types';\n/**\n * Basic hyperlink component\n *\n * @group Buttons\n */\n@Component({\n  tag: 'c-link',\n  styleUrl: 'c-link.scss',\n  shadow: true,\n})\nexport class CLink {\n  /**\n   * Url of link\n   */\n  @Prop() href: string = null;\n\n  /**\n   * Display line under the link\n   */\n  @Prop() underline = false;\n\n  /**\n   * regular target attribute of a hyperlink\n   */\n  @Prop() target: string = null;\n\n  /**\n   * Use another CSC color\n   */\n  @Prop() color: CSCColor = 'link';\n\n  /**\n   * Customisable font weight\n   */\n  @Prop() weight = '600';\n\n  /**\n   * Path for the svg icon\n   */\n  @Prop() path: string = null;\n\n  /**\n   * Fill color for the svg icon\n   */\n  @Prop() iconFill: CSCColor = 'link';\n\n  /**\n   * Icon position\n   */\n  @Prop() iconAfter: false;\n\n  /**\n   * Icon style overrides\n   */\n  @Prop() iconStyle = {};\n\n  render() {\n    const CSCColor = (color: CSCColor) => `var(--csc-${color})`;\n\n    const classList = {\n      underline: this.underline,\n      icon: !!this.path,\n      'icon-after': this.iconAfter,\n    };\n\n    const iconStyle = {\n      ...this.iconStyle,\n      fill: this.iconFill ? CSCColor(this.iconFill) : 'inherit',\n    };\n\n    const style = {\n      color: CSCColor(this.color),\n      fontWeight: this.weight.toString(),\n    };\n\n    return (\n      <a class={classList} href={this.href} target={this.target} style={style}>\n        <slot name=\"icon\">\n          {this.path && (\n            <svg\n              style={iconStyle}\n              class=\"icon-by-path\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d={this.path} />\n            </svg>\n          )}\n        </slot>\n        <slot></slot>\n      </a>\n    );\n  }\n}\n"],"mappings":"2CAAA,MAAMA,EAAW,2qC,MCYJC,EAAK,M,mCAIO,K,eAKH,M,YAKK,K,WAKC,O,YAKT,M,UAKM,K,cAKM,O,wCAUT,E,CAEpBC,SACE,MAAMC,EAAYC,GAAoB,aAAaA,KAEnD,MAAMC,EAAY,CAChBC,UAAWC,KAAKD,UAChBE,OAAQD,KAAKE,KACb,aAAcF,KAAKG,WAGrB,MAAMC,EAASC,OAAAC,OAAAD,OAAAC,OAAA,GACVN,KAAKI,WAAS,CACjBG,KAAMP,KAAKQ,SAAWZ,EAASI,KAAKQ,UAAY,YAGlD,MAAMC,EAAQ,CACZZ,MAAOD,EAASI,KAAKH,OACrBa,WAAYV,KAAKW,OAAOC,YAG1B,OACEC,EAAA,KAAGC,MAAOhB,EAAWiB,KAAMf,KAAKe,KAAMC,OAAQhB,KAAKgB,OAAQP,MAAOA,GAChEI,EAAA,QAAMI,KAAK,QACRjB,KAAKE,MACJW,EAAA,OACEJ,MAAOL,EACPU,MAAM,eACNI,MAAM,KACNC,OAAO,KACPC,QAAQ,aAERP,EAAA,QAAMQ,EAAGrB,KAAKE,SAIpBW,EAAA,a"}