{"file":"c-icon-button2.js","mappings":";;;AAAA,MAAM,cAAc,GAAG,kuMAAkuM;;MCY5uM,WAAW;;;;;IA4Dd,aAAQ,GAAG,CAAC,KAAK;MACvB,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KACtC,CAAC;;gBArDa,KAAK;oBAKD,KAAK;oBAKL,KAAK;gBAKD,IAAI;iBAKX,KAAK;oBAKF,KAAK;gBAKwB,SAAS;;EAIjD,YAAY;IAClB,OAAO,WAAK,KAAK,EAAC,mBAAmB,IAAE,IAAI,CAAC,KAAK,CAAO,CAAC;GAC1D;EAEO,aAAa;IACnB,OAAO;MACL,aAAa,EAAE,IAAI;MACnB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MACzB,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;MACjB,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;MACnB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MACzB,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MACzB,oBAAoB,EAAE,IAAI,CAAC,IAAI,KAAK,OAAO;MAC3C,sBAAsB,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS;KAChD,CAAC;GACH;EAMD,MAAM;IACJ,QACE,cAAQ,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,IACzD,WACE,KAAK,EAAC,iBAAiB,EACvB,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,UAAU,GAAG,EAAoB,CAAC,IAErD,gBACG,IAAI,CAAC,IAAI,KACR,WAAK,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW,IAC7C,YAAM,CAAC,EAAE,IAAI,CAAC,IAAI,GAAI,CAClB,CACP,CACI,CACH,EACL,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE,CAC3B,EACT;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/c-icon-button/c-icon-button.scss?tag=c-icon-button&encapsulation=shadow","./src/components/c-icon-button/c-icon-button.tsx"],"sourcesContent":["button.icon-button {\n  font-family: var(--csc-font-family);\n  display: flex;\n  border: none;\n  padding: 0;\n  width: 40px;\n  height: 40px;\n  background: var(--csc-primary);\n  color: #fff;\n  transition: background-color 0.3s ease;\n  border-radius: 50%;\n  cursor: pointer;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  transform: translate3d(0, 0, 0);\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n\n  ::slotted(svg),\n  ::slotted(i),\n  ::slotted(span) {\n    width: 24px;\n    height: 24px;\n    font-size: 24px;\n  }\n\n  ::slotted(*),\n  svg {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &--small {\n    width: 32px;\n    height: 32px;\n\n    ::slotted(svg),\n    ::slotted(i),\n    ::slotted(span) {\n      width: 22px !important;\n      height: 22px !important;\n      font-size: 16px !important;\n    }\n  }\n\n  &--x-small {\n    width: 28px;\n    height: 28px;\n\n    ::slotted(svg),\n    ::slotted(i),\n    ::slotted(span) {\n      width: 18px !important;\n      height: 18px !important;\n      font-size: 14px !important;\n    }\n  }\n\n  &:focus {\n    outline: 2px var(--csc-primary) solid;\n    outline-offset: 2px;\n  }\n\n  @supports selector(:focus-visible) {\n    &:focus {\n      outline: none;\n    }\n  }\n\n  &:focus-visible {\n    outline: 2px var(--csc-primary) solid;\n    outline-offset: 2px;\n  }\n\n  &.ghost {\n    background: var(--csc-primary-ghost);\n    color: var(--csc-primary);\n\n    ::slotted(*),\n    svg {\n      color: var(--csc-primary) !important;\n      fill: var(--csc-primary) !important;\n    }\n\n    &:hover {\n      background: var(--csc-primary-ghost-hover);\n    }\n\n    &.inverted {\n      color: #fff;\n      background: rgba(255, 255, 255, 0.15);\n\n      ::slotted(*),\n      svg {\n        color: #fff !important;\n        fill: #fff !important;\n      }\n\n      &:hover {\n        background: rgba(255, 255, 255, 0.25);\n      }\n    }\n  }\n\n  &.text {\n    background: transparent;\n    color: var(--csc-primary);\n\n    ::slotted(*),\n    svg {\n      color: var(--csc-primary) !important;\n      fill: var(--csc-primary) !important;\n    }\n\n    &:hover {\n      background: var(--csc-primary-text-hover);\n    }\n\n    &.inverted {\n      color: #fff;\n\n      ::slotted(*),\n      svg {\n        color: #fff !important;\n        fill: #fff !important;\n      }\n\n      &:hover {\n        background: rgba(255, 255, 255, 0.15);\n      }\n    }\n  }\n\n  &.outlined {\n    background: transparent;\n    box-shadow: inset 0 0 0 2px var(--csc-primary);\n    color: var(--csc-primary);\n\n    ::slotted(*),\n    svg {\n      color: var(--csc-primary) !important;\n      fill: var(--csc-primary) !important;\n    }\n\n    &.disabled {\n      background: transparent;\n      box-shadow: inset 0 0 0 2px #acacac;\n    }\n\n    &:hover {\n      background: var(--csc-primary-text-hover);\n    }\n\n    &.inverted {\n      color: #fff;\n      box-shadow: inset 0 0 0 2px #fff;\n\n      ::slotted(*),\n      svg {\n        color: #fff !important;\n        fill: #fff !important;\n      }\n\n      &:hover {\n        background: rgba(255, 255, 255, 0.15);\n      }\n    }\n  }\n\n  &.disabled {\n    background: var(--csc-light-grey);\n    pointer-events: none;\n\n    ::slotted(*),\n    svg {\n      color: var(--csc-mid-grey) !important;\n      fill: var(--csc-mid-grey) !important;\n    }\n\n    &.text {\n      background: transparent;\n    }\n\n    &.ghost {\n      background: var(--csc-lightest-grey);\n    }\n\n    &:hover {\n      background: transparent;\n    }\n  }\n\n  &:hover {\n    background: var(--csc-primary-hover);\n  }\n}\n\n::slotted(*),\nsvg {\n  color: rgb(255, 255, 255);\n  fill: rgb(255, 255, 255);\n  pointer-events: none;\n}\n\n.icon-button-badge {\n  background: #ff5800;\n  border-radius: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 16px;\n  height: 16px;\n  color: #fff;\n  position: absolute;\n  right: -6px;\n  font-size: 12px;\n  box-shadow: 0 0 0 2px #fff;\n  top: -6px;\n  padding: 0 4px;\n}\n\n.inner-container {\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  border-radius: 50%;\n  overflow: hidden;\n  position: relative;\n  transform: translateZ(0);\n  width: 100%;\n}\n\n.ripple {\n  transition: background 0.5s;\n  background-position: center;\n  position: absolute;\n  border-radius: 50%;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0)\n      radial-gradient(circle, transparent 1%, rgba(255, 255, 255, 0.15) 1%)\n      center/15000%;\n  }\n\n  &:active {\n    background-color: rgba(255, 255, 255, 0.25);\n    background-size: 100%;\n    transition: background 0s;\n  }\n}\n\n.disabled .icon-button-badge {\n  background: #acacac;\n}\n\n.outlined .ripple {\n  &:hover {\n    background: rgba(0, 103, 120, 0)\n      radial-gradient(circle, transparent 1%, rgba(0, 103, 120, 0.05) 1%)\n      center/15000%;\n  }\n\n  &:active {\n    background-color: rgba(0, 103, 120, 0.15);\n    background-size: 100%;\n    transition: background 0s;\n  }\n}\n\n.text .ripple {\n  &:hover {\n    background: rgba(0, 103, 120, 0)\n      radial-gradient(circle, transparent 1%, rgba(0, 103, 120, 0.05) 1%)\n      center/15000%;\n  }\n\n  &:active {\n    background-color: rgba(0, 103, 120, 0.15);\n    background-size: 100%;\n    transition: background 0s;\n  }\n}\n\n.ghost .ripple {\n  &:hover {\n    background: rgba(0, 103, 120, 0)\n      radial-gradient(circle, transparent 1%, rgba(0, 103, 120, 0.05) 1%)\n      center/15000%;\n  }\n\n  &:active {\n    background-color: rgba(0, 103, 120, 0.15);\n    background-size: 100%;\n    transition: background 0s;\n  }\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { createRipple } from '../../utils/utils';\n\n/**\n * @group Buttons\n * @slot - Default slot for the icon\n */\n@Component({\n  tag: 'c-icon-button',\n  styleUrl: 'c-icon-button.scss',\n  shadow: true,\n})\nexport class CIconButton {\n  /**\n   * Show a badge on top of the icon\n   */\n  @Prop() badge: string;\n\n  /**\n   * Text variant of the button\n   */\n  @Prop() text = false;\n\n  /**\n   * Inverted color for dark backgrounds\n   */\n  @Prop() inverted = false;\n\n  /**\n   * Outlined variant of the button\n   */\n  @Prop() outlined = false;\n\n  /**\n   * Path for the svg icon\n   */\n  @Prop() path: string = null;\n\n  /**\n   * Ghost variant of the button\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Disable the button\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Size of the button\n   */\n  @Prop() size: 'default' | 'x-small' | 'small' = 'default';\n\n  private _container?: HTMLDivElement;\n\n  private _renderBadge() {\n    return <div class=\"icon-button-badge\">{this.badge}</div>;\n  }\n\n  private _outerClasses() {\n    return {\n      'icon-button': true,\n      disabled: !!this.disabled,\n      text: !!this.text,\n      ghost: !!this.ghost,\n      outlined: !!this.outlined,\n      inverted: !!this.inverted,\n      'icon-button--small': this.size === 'small',\n      'icon-button--x-small': this.size === 'x-small',\n    };\n  }\n\n  private _onClick = (event) => {\n    createRipple(event, this._container);\n  };\n\n  render() {\n    return (\n      <button class={this._outerClasses()} onClick={this._onClick}>\n        <div\n          class=\"inner-container\"\n          ref={(el) => (this._container = el as HTMLDivElement)}\n        >\n          <slot>\n            {this.path && (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d={this.path} />\n              </svg>\n            )}\n          </slot>\n        </div>\n        {this.badge && this._renderBadge()}\n      </button>\n    );\n  }\n}\n"],"version":3}