{"file":"c-pagination2.js","mappings":"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","names":[],"sources":["./src/components/c-pagination/c-pagination.scss?tag=c-pagination&encapsulation=shadow","./src/components/c-pagination/c-pagination.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\nspan {\n  font-size: 14px;\n  text-align: right;\n  white-space: nowrap;\n}\n\n.range {\n  min-width: 132px;\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\n.c-pagination {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0 24px;\n  justify-content: center;\n\n  ul {\n    align-items: center;\n    display: flex;\n    gap: 4px;\n    justify-content: center;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  &--simple {\n    ul {\n      flex: 1;\n      justify-content: flex-end;\n    }\n  }\n\n  &--small {\n    ul {\n      gap: 2px;\n    }\n  }\n\n  &__details {\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    flex: auto;\n    justify-content: space-between;\n  }\n}\n","import {\n  Component,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { mdiChevronLeft, mdiChevronRight, mdiDotsHorizontal } from '@mdi/js';\nimport { CMenuOption, CPaginationOptions } from '../../types';\n\n/**\n * @group Navigation\n */\n\n@Component({\n  tag: 'c-pagination',\n  styleUrl: 'c-pagination.scss',\n  shadow: true,\n})\nexport class CPagination {\n  /**\n   * Object containing values that are needed for pagination.\n   *\n   * Note! startFrom and endTo are assigned automatically to the object based on other values\n   */\n  @Prop() value: CPaginationOptions;\n\n  /**\n   * Hide details (per page dropdown and the 'x - y of n pages' text)\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hide page number buttons\n   */\n  @Prop() simple = false;\n\n  /**\n   * Hide details (per page dropdown and the 'x - y of n pages' text)\n   */\n  @Prop() size: 'default' | 'small' = 'default';\n\n  @State() private _currentPage;\n\n  @State() private _itemsPerPage;\n\n  @State() private _totalVisible;\n\n  /**\n   * Triggered when values are changed\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter<CPaginationOptions>;\n\n  /**\n   * Hide range indicator\n   */\n  @Prop() hideRange = false;\n\n  /**\n   * Items per page options\n   */\n  @Prop() itemsPerPageOptions: number[] = [5, 25, 50, 100];\n\n  @State() tick = '';\n\n  @Watch('value')\n  valueHandler(value: CPaginationOptions, oldValue: CPaginationOptions) {\n    if (this._isEqual(value, oldValue)) return;\n\n    this._setRange();\n  }\n\n  private _isEqual(options1: CPaginationOptions, options2: CPaginationOptions) {\n    const keys1 = Object.keys(options1 || {});\n    const keys2 = Object.keys(options2 || {});\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      if (options1[key] !== options2[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  componentDidLoad() {\n    this._setRange();\n  }\n\n  private _textContent = {\n    itemsPerPageText: 'Items per page:',\n    nextPage: 'Next page',\n    prevPage: 'Previous page',\n  };\n\n  private _getText(key: string) {\n    const source = this.value.textOverrides?.[key]\n      ? this.value.textOverrides\n      : this._textContent;\n\n    return source[key];\n  }\n\n  private _setRange() {\n    this._currentPage = this.value.currentPage || 1;\n    this._itemsPerPage = this.value.itemsPerPage || 25;\n    this._totalVisible = this.value.totalVisible || 7;\n    this.value.startFrom =\n      this._currentPage * this._itemsPerPage - this._itemsPerPage;\n    this.value.endTo = this._currentPage * this._itemsPerPage - 1;\n    this.changeValue.emit(this.value);\n  }\n\n  private _buttons: HTMLLIElement[] = [];\n\n  private _valueChangeHandler() {\n    this.value.currentPage = this._currentPage;\n    this.value.itemsPerPage = this._itemsPerPage;\n    this._setRange();\n  }\n\n  private _getItemsPerPage() {\n    const itemsPerPageOptions: CMenuOption[] = this.itemsPerPageOptions.map(\n      (i) => ({\n        name: i.toString(),\n        action: () => {\n          this._itemsPerPage = i;\n          this._currentPage = 1;\n          this._valueChangeHandler();\n        },\n      }),\n    );\n\n    const onMenuClick = (event) => {\n      event.stopPropagation();\n    };\n\n    return (\n      <c-menu items={itemsPerPageOptions} nohover onClick={onMenuClick}>\n        <div>\n          <span class=\"items-per-page\">\n            {this._getText('itemsPerPageText')} {this._itemsPerPage}\n          </span>\n        </div>\n      </c-menu>\n    );\n  }\n\n  private _getTotalPages() {\n    return Math.ceil(this.value.itemCount / this._itemsPerPage);\n  }\n\n  private _increasePageNumber = () => {\n    if (this._currentPage < this._getTotalPages()) {\n      this._currentPage += 1;\n      this._valueChangeHandler();\n    }\n  };\n\n  private _decreasePageNumber = () => {\n    if (this._currentPage > 1) {\n      this._currentPage -= 1;\n      this._valueChangeHandler();\n    }\n  };\n\n  private _setPage(number) {\n    this._currentPage = number;\n    this._valueChangeHandler();\n  }\n\n  private _getRange() {\n    if (this.hideRange) return;\n\n    const end = Math.min(\n      this._currentPage * this._itemsPerPage,\n      this.value.itemCount,\n    );\n    const start = this.value.startFrom + 1;\n\n    const pageTextOverride = this.value.textOverrides?.pageText;\n\n    let parsedPageTextOverride;\n\n    if (pageTextOverride) {\n      parsedPageTextOverride = pageTextOverride({\n        start: start,\n        end: end,\n        count: this.value.itemCount,\n      });\n    }\n\n    return pageTextOverride\n      ? parsedPageTextOverride\n      : `${start} - ${end} of ${this.value.itemCount} items`;\n  }\n\n  private _getArrowLeft(size) {\n    return (\n      <li>\n        <c-icon-button\n          aria-disabled={this.value.currentPage <= 1 ? 'true' : 'false'}\n          aria-label={`${this._getText('prevPage')}`}\n          disabled={this.value.currentPage <= 1}\n          size={size}\n          text\n          onClick={this._decreasePageNumber}\n        >\n          <span class=\"visuallyhidden\">{this._getText('prevPage')}</span>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d={mdiChevronLeft} />\n          </svg>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _getArrowRight(size) {\n    return (\n      <li>\n        <c-icon-button\n          aria-disabled={\n            this.value.currentPage >= this._getTotalPages() ? 'true' : 'false'\n          }\n          aria-label={`${this._getText('nextPage')}`}\n          disabled={this.value.currentPage >= this._getTotalPages()}\n          size={size}\n          text\n          onClick={this._increasePageNumber}\n        >\n          <span class=\"visuallyhidden\">{this._getText('nextPage')}</span>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d={mdiChevronRight} />\n          </svg>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _button(number, size) {\n    const params = {\n      text: this._currentPage !== number,\n      onClick: () => this._setPage(number),\n      size,\n    };\n\n    if (this._currentPage === number) {\n      params['aria-current'] = 'page';\n    }\n\n    const pageOfTextOverride = this.value.textOverrides?.pageOfText;\n\n    let parsedPageOfTextOverride;\n\n    if (pageOfTextOverride) {\n      parsedPageOfTextOverride = pageOfTextOverride({\n        pageNumber: number,\n        count: this._getTotalPages(),\n      });\n    }\n\n    return (\n      <li>\n        <c-icon-button {...params}>\n          <span\n            aria-label={\n              pageOfTextOverride\n                ? parsedPageOfTextOverride\n                : `page ${number} of ${this._getTotalPages()}`\n            }\n          >\n            {number}\n          </span>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _addButton(number, size) {\n    this._buttons.push(this._button(number, size));\n  }\n\n  private _addSeparator(size) {\n    this._buttons.push(\n      <li>\n        <c-icon-button\n          aria-disabled=\"true\"\n          size={size}\n          tabindex=\"-1\"\n          role=\"separator\"\n          disabled\n          text\n        >\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n            <path d={mdiDotsHorizontal} />\n          </svg>\n        </c-icon-button>\n      </li>,\n    );\n  }\n\n  private _addButtons(buttonStart, buttonCount, size) {\n    if (buttonStart > 1) {\n      this._addButton(1, size);\n      this._addSeparator(size);\n    }\n\n    for (let index = 1; index < buttonCount; index++) {\n      this._addButton(buttonStart + index, size);\n    }\n\n    const allPagesVisible = this._getTotalPages() <= this._totalVisible;\n\n    if (\n      (this._currentPage < this._totalVisible - 1 ||\n        this._currentPage < this._getTotalPages() - this._totalVisible + 4) &&\n      !allPagesVisible\n    ) {\n      this._addSeparator(size);\n    }\n  }\n\n  private _getPageButtons(size) {\n    this._buttons = [];\n    let buttonStart = 0;\n    let buttonCount = this._getTotalPages() + 1;\n    const morePagesThanVisible = this._getTotalPages() > this._totalVisible;\n\n    if (morePagesThanVisible) {\n      if (this._currentPage < this._totalVisible - 2) {\n        buttonCount = this._totalVisible - 1;\n      } else if (\n        this._currentPage <\n        this._getTotalPages() - this._totalVisible + 4\n      ) {\n        buttonStart = Math.ceil(this._currentPage - this._totalVisible / 2) + 1;\n        buttonCount = this._totalVisible - 3;\n      } else {\n        buttonStart = this._getTotalPages() - this._totalVisible + 2;\n        buttonCount = this._totalVisible - 2;\n      }\n    }\n\n    this._addButtons(buttonStart, buttonCount, size);\n\n    if (morePagesThanVisible) {\n      this._buttons.push(this._button(this._getTotalPages(), size));\n    }\n\n    return this._buttons;\n  }\n\n  render() {\n    const classes = {\n      'c-pagination': true,\n      'c-pagination--small': this.size === 'small',\n      'c-pagination--simple': this.simple,\n    };\n\n    const buttonsize = this.size === 'small' ? 'x-small' : 'small';\n\n    return (\n      <nav class={classes} role=\"navigation\" aria-label=\"pagination\">\n        {!this.hideDetails && (\n          <div class=\"c-pagination__details\">\n            {this._getItemsPerPage()}\n\n            <span class={{ range: !this.simple }}>{this._getRange()}</span>\n          </div>\n        )}\n\n        <ul>\n          {this._getArrowLeft(buttonsize)}\n          {!this.simple && this._getPageButtons(buttonsize)}\n          {this._getArrowRight(buttonsize)}\n        </ul>\n      </nav>\n    );\n  }\n}\n"],"version":3}