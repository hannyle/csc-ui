{"file":"c-button.js","mappings":"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","names":["CButton"],"sources":["./src/components/c-button/c-button.scss?tag=c-button&encapsulation=shadow","./src/components/c-button/c-button.tsx"],"sourcesContent":[":host {\n  --c-outline-color: var(--csc-primary);\n\n  display: inline-flex;\n}\n\n:host(.inverted) {\n  --c-outline-color: #fff;\n}\n\n::slotted([slot='icon']) {\n  font-size: var(--c-button-icon-size);\n}\n\n::slotted(svg) {\n  fill: var(--c-color);\n}\n\na {\n  text-decoration: none;\n}\n\nbutton,\na {\n  &:not(.grouped) {\n    --c-radius: 4px;\n  }\n\n  &.no-radius {\n    --c-radius: 0;\n  }\n\n  font-family: var(--csc-font-family);\n  display: flex;\n  border: none;\n  padding: 0;\n  background: transparent;\n  border-radius: var(--c-radius);\n  position: relative;\n  overflow: hidden;\n  margin: 0;\n\n  &:focus {\n    outline: 2px var(--c-outline-color) solid;\n    outline-offset: 2px;\n  }\n\n  @supports selector(:focus-visible) {\n    &:focus {\n      outline: none;\n    }\n  }\n\n  &:focus-visible {\n    outline: 2px var(--c-outline-color) solid;\n    outline-offset: 2px;\n  }\n\n  &.grouped {\n    flex: 1;\n    transform: translateZ(0); // Safari border-radius fix\n\n    &:focus,\n    &:focus-visible {\n      outline-offset: 4px;\n      z-index: 1;\n    }\n  }\n\n  &.fit {\n    flex-grow: 1 !important;\n    width: 100%;\n  }\n}\n\n@media (max-width: 767px) {\n  .full-width-mobile {\n    max-width: 100% !important;\n    width: 100% !important;\n    margin: 0 !important;\n\n    .c-button-padding {\n      padding: 24px 38px;\n    }\n  }\n\n  .full-width {\n    flex-grow: 1 !important;\n  }\n}\n\n.c-button {\n  --c-height: 44px;\n  --c-padding: 0 16px;\n  --c-font-size: 16px;\n  --c-background-color: var(--csc-primary);\n  --c-color: #fff;\n  --c-hover-background: var(--csc-primary-hover);\n  --c-button-icon-size: 24px;\n\n  $this: &;\n\n  background-color: var(--c-background-color);\n  border-radius: var(--c-radius);\n  position: relative;\n  cursor: pointer;\n  box-shadow: none;\n  outline: none;\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  transform: translate3d(0, 0, 0);\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n  transition: background-color 0.3s;\n  color: var(--c-color);\n  margin: 0;\n  text-decoration: none;\n  display: inline-block;\n  text-align: center;\n  font-size: var(--c-font-size);\n  font-weight: 700;\n  line-height: 18px;\n  user-select: none;\n  min-width: 88px;\n  white-space: nowrap;\n\n  * {\n    pointer-events: none;\n  }\n\n  svg {\n    fill: var(--c-color);\n    height: var(--c-button-icon-size);\n    width: var(--c-button-icon-size);\n\n    &.icon-by-path {\n      margin-right: 8px;\n    }\n\n    &.button-icon {\n      margin-right: 16px;\n      font-size: 10px;\n      margin-left: -8px;\n      margin-bottom: -2px;\n    }\n  }\n\n  &:hover {\n    background-color: var(--c-hover-background);\n  }\n\n  &--inverted {\n    --c-background-color: #fff;\n    --c-color: var(--csc-primary);\n    --c-hover-background: rgba(255, 255, 255, 0.85);\n  }\n\n  &--small {\n    --c-height: 28px;\n    --c-padding: 0 12px;\n    --c-font-size: 14px;\n    --c-button-icon-size: 20px;\n  }\n\n  &--large {\n    --c-height: 52px;\n    --c-padding: 0 24px;\n    --c-font-size: 18px;\n  }\n\n  &--ghost {\n    --c-background-color: var(--csc-primary-ghost);\n    --c-color: var(--csc-primary);\n    --c-hover-background: var(--csc-primary-ghost-hover);\n\n    &#{$this} {\n      &--inverted {\n        --c-background-color: rgba(255, 255, 255, 0.15);\n        --c-color: #fff;\n        --c-hover-background: rgba(255, 255, 255, 0.25);\n      }\n\n      &--disabled {\n        --c-background-color: var(--csc-lightest-grey);\n        --c-hover-background: var(--csc-lightest-grey);\n      }\n    }\n  }\n\n  &--text {\n    --c-background-color: transparent;\n    --c-color: var(--csc-primary);\n    --c-hover-background: var(--csc-primary-text-hover);\n\n    &#{$this} {\n      &--inverted {\n        --c-color: #fff;\n        --c-hover-background: rgba(255, 255, 255, 0.15);\n      }\n\n      &--disabled {\n        --c-background-color: transparent;\n        --c-hover-background: transparent;\n      }\n    }\n  }\n\n  &--outlined {\n    --c-background-color: transparent;\n    --c-color: var(--csc-primary);\n    --c-hover-background: var(--csc-primary-text-hover);\n\n    box-shadow: inset 0 0 0 2px var(--c-color);\n\n    &#{$this} {\n      &--inverted {\n        --c-color: #fff;\n        --c-hover-background: rgba(255, 255, 255, 0.15);\n      }\n\n      &--disabled {\n        --c-background-color: transparent;\n        --c-hover-background: transparent;\n      }\n\n      &--grouped {\n        --c-background-color: #fff;\n        --c-hover-background: var(--csc-primary-text-hover);\n\n        &::before,\n        &::after {\n          background-color: #fff;\n          content: '';\n          height: 100%;\n          left: 0;\n          position: absolute;\n          top: 0;\n          transition: background-color 0.3s ease-in-out;\n          width: 100%;\n          z-index: -1;\n        }\n\n        &:hover {\n          background-color: #fff;\n\n          &::after {\n            background-color: var(--csc-primary-text-hover);\n          }\n        }\n      }\n    }\n  }\n\n  &--disabled {\n    --c-color: var(--csc-mid-grey);\n    --c-background-color: var(--csc-light-grey);\n    --c-hover-background: var(--csc-light-grey);\n\n    cursor: default !important;\n    pointer-events: none;\n\n    &.outlined {\n      --c-background-color: transparent;\n      --c-hover-background: transparent;\n      --c-color: var(--csc-mid-grey);\n    }\n\n    &.grouped {\n      box-shadow: none !important;\n\n      &:not(.outlined) {\n        color: var(--csc-dark-grey) !important;\n        box-shadow: none;\n      }\n    }\n  }\n\n  &--no-radius {\n    --c-radius: 0;\n  }\n\n  &--fitted {\n    width: 100%;\n  }\n\n  &.grouped {\n    border-radius: 0;\n    white-space: nowrap;\n    border: none;\n    box-shadow: none;\n    flex-grow: 1;\n  }\n\n  &--description {\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 0;\n  }\n\n  &__content {\n    display: flex;\n    gap: 8px;\n    height: var(--c-height);\n    align-items: center;\n    justify-content: center;\n    padding: var(--c-padding);\n  }\n\n  &__description {\n    font-weight: 400;\n    font-size: 12px;\n    padding: 0 12px 12px;\n\n    &--loading {\n      opacity: 0.5;\n    }\n  }\n}\n\n.spinner__circle {\n  animation: 2s ease-in-out infinite both circle-animation;\n  display: block;\n  fill: transparent;\n  stroke: var(--c-color);\n  stroke-linecap: round;\n  stroke-dasharray: 283;\n  stroke-dashoffset: 280;\n  stroke-width: 10px;\n  transform-origin: 50% 50%;\n}\n\n.fit {\n  width: 100%;\n}\n\n.hide-text {\n  color: transparent !important;\n\n  svg {\n    fill: transparent !important;\n  }\n\n  .outlined.c-button svg {\n    fill: transparent !important;\n  }\n}\n\n.spinner_wrapper {\n  width: 100%;\n  position: absolute;\n  height: var(--c-height);\n  display: grid;\n  place-content: center;\n\n  &.dense_spinner {\n    padding-top: 7px;\n\n    .spinner {\n      max-width: 24px;\n    }\n  }\n}\n\n.spinner {\n  animation: 3s linear infinite svg-animation;\n  max-width: 30px;\n  position: relative;\n  height: calc(var(--c-height) - 12px);\n}\n\n@keyframes svg-animation {\n  0% {\n    transform: rotateZ(0deg);\n  }\n  100% {\n    transform: rotateZ(360deg);\n  }\n}\n\n@keyframes circle-animation {\n  0%,\n  25% {\n    stroke-dashoffset: 280;\n    transform: rotate(0);\n  }\n\n  50%,\n  75% {\n    stroke-dashoffset: 75;\n    transform: rotate(45deg);\n  }\n\n  100% {\n    stroke-dashoffset: 280;\n    transform: rotate(360deg);\n  }\n}\n","import {\n  Component,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n} from '@stencil/core';\nimport { mdiPlus, mdiMinus, mdiAccount, mdiPencil } from '@mdi/js';\nimport { createRipple } from '../../utils/utils';\n\n/**\n * @group Buttons\n * @slot - Button text\n * @slot icon - Icon\n * @slot description - Additional description to be shown below the button text\n */\n@Component({\n  tag: 'c-button',\n  styleUrl: 'c-button.scss',\n  shadow: true,\n})\nexport class CButton {\n  /**\n   * Inverted button style for dark backgrounds\n   */\n  @Prop() inverted = false;\n\n  /**\n   * Outlined button style\n   */\n  @Prop() outlined = false;\n\n  /**\n   * Light button background\n   */\n  @Prop() ghost = false;\n\n  /**\n   * True when used as a tab button\n   * @private\n   */\n  @Prop() grouped = false;\n\n  /**\n   * Transparent button background\n   */\n  @Prop() text = false;\n\n  /**\n   * Display loader on the button\n   */\n  @Prop() loading = false;\n\n  /**\n   * Fit width to containing element\n   */\n  @Prop() fit = false;\n\n  /**\n   * Remove the default border radius\n   */\n  @Prop() noRadius = false;\n\n  /**\n   * Icon after text\n   */\n  @Prop() iconEnd = false;\n\n  /**\n   * Button type\n   */\n  @Prop() type: 'button' | 'submit' = 'button';\n\n  /**\n   * Disable the button\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Name of the icon to be displayed in the button\n   *\n   * @deprecated Please use the icon slot instead\n   */\n  @Prop() icon: 'plus' | 'minus' | 'account' | 'edit';\n\n  /**\n   * Value for the button\n   * - for use in the c-tab-buttons\n   */\n  @Prop() value?: number | string;\n\n  /**\n   * Id of the button\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Size of the button\n   */\n  @Prop() size: 'default' | 'small' | 'large' = 'default';\n\n  /**\n   * Hyperlink url\n   */\n  @Prop() href: string;\n\n  /**\n   * Path for the svg icon\n   */\n  @Prop() path: string = null;\n\n  /**\n   * Hyperlink target\n   */\n  @Prop() target = '_blank';\n\n  /**\n   * Emit changes to the parent\n   * @private\n   */\n  @Event() tabChange: EventEmitter<number | string>;\n\n  @Element() hostElement: HTMLCButtonElement;\n\n  private _container?: HTMLDivElement;\n\n  private _onClick = (event, center = false) => {\n    if (this.disabled) {\n      event.preventDefault();\n\n      return;\n    }\n\n    createRipple(event, this._container, center);\n\n    this.tabChange.emit(this.value ?? this.hostElement.dataset.index);\n\n    if (this.type === 'submit') {\n      this._closestElementComposed('form', this._container).submit();\n    }\n  };\n\n  private _onKeyDown = (event: KeyboardEvent) => {\n    if (['Space', 'Enter'].includes(event.code)) {\n      if (!this.href) {\n        event.preventDefault();\n      }\n\n      this._onClick(event, true);\n    }\n  };\n\n  private _closestElementComposed(selector, base) {\n    function __closestFrom(el) {\n      const found = el.closest(selector);\n\n      return found ? found : __closestFrom(el.getRootNode().host);\n    }\n\n    return __closestFrom(base);\n  }\n\n  private _containerhasDescriptionSlot: boolean;\n\n  componentWillLoad() {\n    this._containerhasDescriptionSlot = !!this.hostElement.querySelector(\n      '[slot=\"description\"]',\n    );\n  }\n\n  render() {\n    const SPINNER_SMALL: SVGImageElement = (\n      <svg\n        class=\"spinner\"\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle class=\"spinner__circle\" cx=\"50\" cy=\"50\" r=\"45\" />\n      </svg>\n    );\n\n    let selectedIcon = null;\n    let svg: SVGImageElement;\n\n    if (this.icon) {\n      const icons = {\n        plus: mdiPlus,\n        minus: mdiMinus,\n        account: mdiAccount,\n        edit: mdiPencil,\n      };\n      selectedIcon = icons[this.icon];\n      svg = (\n        <svg class=\"button-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 22 22\">\n          <path d={selectedIcon} />\n        </svg>\n      );\n    }\n\n    const contentClasses = {\n      'c-button': true,\n      'c-button--description': this._containerhasDescriptionSlot,\n      'c-button--disabled': !!this.disabled,\n      'c-button--fitted': !!this.fit,\n      'c-button--ghost': !!this.ghost,\n      'c-button--large': this.size === 'large',\n      'c-button--no-radius': !!this.noRadius,\n      'c-button--outlined': !!this.outlined,\n      'c-button--small': this.size === 'small',\n      'c-button--text': !!this.text,\n      'c-button--grouped': this.grouped,\n      'c-button--inverted': this.inverted,\n    };\n\n    const innerClasses = {\n      'c-button__content': true,\n      'hide-text': this.loading,\n    };\n\n    const buttonClasses = {\n      fit: !!this.fit,\n      'no-radius': !!this.noRadius,\n      grouped: this.grouped,\n    };\n\n    const hostClasses = {\n      'c-button--active': this.grouped && !this.outlined,\n      inverted: this.inverted,\n    };\n\n    const descriptionSlotClasses = {\n      'c-button__description': this._containerhasDescriptionSlot,\n      'c-button__description--loading': this.loading,\n    };\n\n    const Tag = !!this.href ? 'a' : 'button';\n\n    const attributes = {\n      id: this.hostId,\n      class: buttonClasses,\n      tabindex: this.disabled ? -1 : 0,\n      role: 'button',\n      disabled: this.disabled,\n      onKeyDown: this._onKeyDown,\n      onClick: this._onClick,\n    };\n\n    let linkAttributes = {};\n\n    if (!!this.href) {\n      linkAttributes = { href: this.href, target: this.target };\n    }\n\n    const renderIcon = (\n      <slot name=\"icon\">\n        {this.path && (\n          <svg class=\"icon-by-path\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d={this.path} />\n          </svg>\n        )}\n      </slot>\n    );\n\n    return (\n      <Host class={hostClasses}>\n        <Tag {...attributes} {...linkAttributes}>\n          <div\n            class={contentClasses}\n            ref={(el) => (this._container = el as HTMLDivElement)}\n          >\n            {this.loading && <div class=\"spinner_wrapper\">{SPINNER_SMALL}</div>}\n            <div class={innerClasses}>\n              {!this.iconEnd && renderIcon}\n\n              {svg}\n\n              <slot></slot>\n\n              {this.iconEnd && renderIcon}\n            </div>\n            {this._containerhasDescriptionSlot && (\n              <div class={descriptionSlotClasses}>\n                <slot name=\"description\"></slot>\n              </div>\n            )}\n          </div>\n        </Tag>\n      </Host>\n    );\n  }\n}\n"],"version":3}